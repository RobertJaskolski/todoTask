{"version":3,"sources":["utils.js","theme/forms.theme.js","theme/buttons.theme.js","theme/cards.theme.js","theme/theme.js","theme/text.theme.js","api/index.js","api/todos.js","api/user.js","consts.js","recoil/user/index.js","recoil/todo/index.js","hook/useRefreshReques.js","containers/NewTodoPanel/index.js","components/InfoAboutTodos/index.js","components/Link/index.js","components/TodoListItem/index.js","components/TodosList/index.js","components/PaginationTodosList/index.js","containers/TodoListPanel/index.js","components/SkeletonTodosListPanel/index.js","components/ErrorBoundaryForList/index.js","hoc/WithUser.js","containers/Home/index.js","components/UserForm/index.js","hoc/WithModal.js","components/Header/index.js","components/EditTodoForm/index.js","containers/TodoDetails/index.js","components/SkeletonTodoDetails/index.js","components/ErrorBoundaryForTodoDetails/index.js","App.js","reportWebVitals.js","index.js"],"names":["key","formsTheme","switch","backgroundColor","textarea","color","resize","width","margin","fontSize","maxHeight","select","label","display","justifyContent","alignItems","input","button","cursor","opacity","transition","textTransform","card","padding","borderRadius","theme","breakpoints","colors","text","forms","background","primary","secondary","highlight","muted","lightRed","softGreen","modes","dark","fonts","body","fontSizes","fontWeights","heading","bold","letterSpacings","lineHeights","styles","root","fontFamily","fontWeight","a","textDecoration","minHeight","buttons","bg","deleted","icon","height","borderColor","border","close","textAlign","lineHeight","cards","uncompleted","boxShadow","completed","client","endpoint","query","options","fetch","headers","Authorization","process","Accept","then","res","ok","json","Promise","reject","status","catch","error","getTodo","id","code","data","getTodos","page","q","todoList","pagination","meta","updateTodo","todo","newData","method","JSON","stringify","deleteTodo","getUser","getUserByEmail","user","email","addUser","updateUser","newUserInfo","DEFAULT_USER","name","gender","handleDateToString","stringDate","date","Date","day","getDate","month","getMonth","hours","getHours","minutes","getMinutes","getFullYear","handleCheckUser","checkUser","length","response","newDataUserState","atom","default","effects_UNSTABLE","setSelf","onSet","savedValue","localStorage","getItem","parse","newValue","DefaultValue","removeItem","setItem","currentUserQuery","selector","get","userData","currentUserState","getUserQuery","selectorFamily","requestIDtodos","requestIDtodo","currentPageState","filterTodosState","my","todosResponseQuery","err","todosResponseState","todosStatsQuery","totalNum","totalCompleted","filter","item","totalUncompleted","newTodoTextState","newTodoTextLengthQuery","todoResponseQuery","todoResponseState","atomFamily","useRefreshReques","atomID","setRefresh","useSetRecoilState","x","NewTodoPanel","foreceRefreshTodos","useRecoilState","newTodoText","setNewTodoText","todoTextLenght","useRecoilValue","addToast","useToasts","as","sx","flexBasis","pt","pb","position","placeholder","rows","value","onChange","e","target","aria-label","variant","onClick","appearance","autoDismiss","contents","user_id","addTodo","title","InfoAboutTodos","handleToggleCompleted","handleToggleMy","flexWrap","ml","mb","defaultChecked","Link","children","to","ReactRouterLink","TodoListItem","forceRefreshTodos","handleUpdateTask","handleDeleteTask","overflowWrap","borderLeft","borderLeftColor","TodosList","columns","Array","isArray","map","PaginationTodosList","handleNexPage","handleBackPage","handleGoToFirst","handleGoToLast","handleSelectPage","currentPage","total","pages","p","disabled","keys","TodoListPanel","filters","setFilters","setCurrentPage","Number","useEffect","minheight","overflow","SkeletonTodosListPanel","isError","ErrorBoundaryForList","props","state","hasError","this","React","Component","WithUser","WrappedComponent","setNewUser","useRecoilValueLoadable","NewTaskPanelWithUser","Home","Suspense","fallback","UserForm","onClose","useForm","register","handleSubmit","errors","formState","onSubmit","type","required","defaultValue","WithModal","modalContainer","document","getElementById","isOpen","ReactDOM","createPortal","top","zIndex","UserFormModalWithUser","compose","Header","useColorMode","colorMode","setColorMode","useState","showModal","setShowModal","handleToggleModal","left","EditTodoForm","EditTodoFormModal","forceRefreshTodo","minLength","maxLength","TodoDetails","useParams","history","useHistory","created_at","updated_at","m","mt","goBack","mr","push","SkeletonTodoDetails","ErrorBoundaryForTodoDetails","App","placement","className","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"wHA0CGA,E,iCCVYC,EAhCI,CACjBC,OAAQ,CACNC,gBAAiB,YACjB,oBAAqB,CACnBA,gBAAiB,YAGrBC,SAAU,CACRC,MAAO,QACPC,OAAQ,OACRC,MAAO,MACPC,OAAQ,YACRL,gBAAiB,QACjBM,SAAU,CAAC,EAAG,EAAG,KAAM,GACvBC,UAAW,QAEbC,OAAQ,CACNN,MAAO,SAETO,MAAO,CACLH,SAAU,CAAC,EAAG,EAAG,GACjBI,QAAS,OACTC,eAAgB,aAChBC,WAAY,SACZP,OAAQ,YAEVQ,MAAO,CACLP,SAAU,CAAC,EAAG,EAAG,GACjBD,OAAQ,qB,OC5BNS,EAAS,CACbZ,MAAO,aACPa,OAAQ,UACRC,QAAS,GACTC,WAAY,2BACZC,cAAe,YACf,UAAW,CACTF,QAAS,ICPPG,EAAO,CACXT,QAAS,OACTE,WAAY,SACZD,eAAgB,gBAChBK,QAAS,GACTI,QAAS,YACTC,aAAc,MACdJ,WAAY,gCACZ,UAAW,CACTD,QAAS,KCsDEM,EA1DD,CACZC,YAAa,CAAC,QAAS,SAAU,UACjCC,OAAQ,CACNC,KAAM,UACNC,MAAO,UACPC,WAAY,OACZC,QAAS,UACTC,UAAW,UACXC,UAAW,UACXC,MAAO,UACPC,SAAU,UACVC,UAAW,UACXC,MAAO,CACLC,KAAM,CACJT,MAAO,UACPC,WAAY,UACZC,QAAS,OACTC,UAAW,OACXE,MAAO,aAIbK,MAAO,CACLC,KAAM,6BAERC,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxCC,YAAa,CACXF,KAAM,IACNZ,KAAM,IACNe,QAAS,IACTC,KAAM,KAERC,eAAgB,CACdL,KAAM,UAERM,YAAa,CACXN,KAAM,IACNG,QAAS,MAEXI,OAAQ,CACNC,KAAM,CACJC,WAAY,OACZC,WAAY,QAEdC,EAAG,CACDC,eAAgB,OAChB3C,SAAU,CAAC,EAAG,EAAG,EAAG,GACpByC,WAAY,OACZG,UAAW,CAAC,QAAS,QACrBhD,MAAO,SAGXwB,MAAO5B,EACPqD,QF/CmB,CACnBvB,QAAQ,2BACHd,GADE,IAELsC,GAAI,YACJ9C,SAAU,CAAC,EAAG,EAAG,KAEnBuB,UAAU,2BACLf,GADI,IAEPsC,GAAI,cAENC,QAAQ,2BACHvC,GADE,IAELsC,GAAI,YAENE,KAAK,2BACAxC,GADD,IAEFV,MAAO,OACPmD,OAAQ,OACRrD,MAAO,OACPsD,YAAa,OACbC,OAAQ,YACRxC,WAAY,uBACZ,UAAW,CACTD,QAAS,EACTd,MAAO,aAET,aAAc,CACZc,QAAS,GACTD,OAAQ,aAGZ2C,MAAO,CACL3C,OAAQ,UACRV,OAAQ,MACRoD,OAAQ,cEcVhC,KC3DgB,CAChBe,QAAS,CACPtB,cAAe,YACfyC,UAAW,SACXb,WAAY,OACZc,WAAY,YDuDdC,MD/CiB,CACjBC,YAAY,aACV9D,gBAAiB,WACjB+D,UAAW,eACR5C,GAEL6C,UAAU,aACRhE,gBAAiB,YACjB+D,UAAW,iBACR5C,K,6DGnBM8C,EAAS,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,SAAyC,IAA/BC,aAA+B,MAAvB,GAAuB,MAAnBC,eAAmB,MAAT,GAAS,EAChE,OAAOC,MAAM,GAAD,OAJF,kCAIE,YAAWH,GAAX,OAAsBC,GAAtB,aACVG,QAAS,CACPC,cAAc,UAAD,OALHC,oEAMVC,OAAQ,mBACR,eAAgB,qBAEfL,IAEFM,MAAK,SAACC,GACL,OAAIA,EAAIC,GAAWD,EAAIE,OAClBF,EAAIC,QAAT,EAAoBE,QAAQC,OAAR,6BAAqCJ,EAAIK,YAE9DC,OAAM,SAACC,GACN,OAAOJ,QAAQC,OAAR,yBAAiCG,QCdjCC,EAAU,SAAC,GAAD,QAAGC,GAAH,OACrBnB,EAAO,CACLC,SAAS,UAAD,YAFW,MAAQ,EAAR,KAGlBQ,MAAK,SAACC,GACP,GAAiB,MAAbA,EAAIU,KAAc,OAAOV,EAAIW,KACjC,GAAiB,MAAbX,EAAIU,KACN,MAAMP,QAAQC,OAAR,qGAGR,GAAiB,MAAbJ,EAAIU,MAA6B,MAAbV,EAAIU,KAC1B,MAAMP,QAAQC,OAAR,sDAICQ,EAAW,SAAC,GAAD,QAAGC,YAAH,MAAU,EAAV,MAAaC,SAAb,MAAiB,GAAjB,SACtBxB,EAAO,CACLC,SAAU,SACVC,MAAM,SAAD,OAAWqB,GAAX,OAAkBC,KACtBf,MAAK,SAACC,GACP,GAAiB,MAAbA,EAAIU,KACN,MAAO,CAAEK,SAAS,YAAKf,EAAIW,MAAOK,WAAYhB,EAAIiB,KAAKD,YACzD,GAAiB,MAAbhB,EAAIU,KACN,MAAMP,QAAQC,OAAR,6BAAqCJ,EAAIU,WAgBxCQ,EAAa,SAAC,GAAD,QAAGC,YAAH,MAAU,GAAV,EAAcC,EAAd,EAAcA,QAAd,OACxB9B,EAAO,CACLC,SAAS,UAAD,OAAY4B,EAAKV,IACzBhB,QAAS,CACP4B,OAAQ,QACR3D,KAAM4D,KAAKC,UAAUH,MAEtBrB,MAAK,SAACC,GACP,OAAiB,MAAbA,EAAIU,MAA6B,MAAbV,EAAIU,KAAqBV,EAAIW,KACzCQ,MAIHK,EAAa,SAAC,GAAD,QAAGL,YAAH,MAAU,GAAV,SACxB7B,EAAO,CACLC,SAAS,UAAD,OAAY4B,EAAKV,IACzBhB,QAAS,CACP4B,OAAQ,YAETtB,MAAK,SAACC,GACP,OAAiB,MAAbA,EAAIU,MAA6B,MAAbV,EAAIU,KAAqBV,EAAIW,KACzCQ,M,wBC5DHM,EAAU,SAAC,GAAD,IAAGhB,EAAH,EAAGA,GAAH,OACrBnB,EAAO,CACLC,SAAS,UAAD,OAAYkB,KACnBV,MAAK,SAACC,GACP,OAAOA,EAAIW,SAGFe,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAC5BrC,EAAO,CACLC,SAAS,SACTC,MAAM,UAAD,OAAYmC,EAAKC,SACrB7B,MAAK,SAACC,GACP,OAAOA,EAAIW,SAIFkB,EAAU,SAAC,GAAD,IAAGF,EAAH,EAAGA,KAAH,OACrBrC,EAAO,CACLC,SAAS,SACTE,QAAS,CACP4B,OAAQ,OACR3D,KAAM4D,KAAKC,UAAL,aAAiBlB,OAAQ,UAAasB,OAE7C5B,MAAK,SAACC,GACP,OAAiB,MAAbA,EAAIU,MAA6B,MAAbV,EAAIU,KAAqBV,EAAIW,KACzCgB,MAIHG,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaJ,EAAhB,EAAgBA,KAAhB,OACxBrC,EAAO,CACLC,SAAS,UAAD,OAAYoC,EAAKlB,IACzBhB,QAAS,CACP4B,OAAQ,QACR3D,KAAM4D,KAAKC,UAAUQ,MAEtBhC,MAAK,SAACC,GACP,OAAiB,MAAbA,EAAIU,MAA6B,MAAbV,EAAIU,KACnBV,EAAIW,KACCgB,MCzCLK,EAAe,CAC1BC,KAAM,gBACNL,MAAO,sBACPM,OAAQ,QTEGC,EAAqB,SAACC,GACjC,IAAMC,EAAO,IAAIC,KAAKF,GAEhBG,EAAMF,EAAKG,UAAY,EAAIH,EAAKG,UAA1B,WAA0CH,EAAKG,WACrDC,EACJJ,EAAKK,WAAa,EAAI,EAAIL,EAAKK,WAAa,EAA5C,WAAoDL,EAAKK,WAAa,GAClEC,EAAQN,EAAKO,WAAa,EAAIP,EAAKO,WAA3B,WAA4CP,EAAKO,YACzDC,EACJR,EAAKS,aAAe,EAAI,EACpBT,EAAKS,aAAe,EADxB,WAEQT,EAAKS,aAAe,GAE9B,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAA0BJ,EAAKU,cAA/B,YAAgDJ,EAAhD,YAAyDE,IAI9CG,EAAe,uCAAG,qCAAA3E,EAAA,iEAASsD,YAAT,MAAgBK,EAAhB,WACLN,EAAe,CAAEC,SADZ,UAGH,KAAb,QAFPsB,EADuB,cAGhB,IAATA,OAAA,EAAAA,EAAWC,QAHc,gCAIJrB,EAAQ,CAAEF,SAJN,cAIrBwB,EAJqB,yBAKpBA,GALoB,UAQzBF,EAAU,GAAGhB,OAASN,EAAKM,MAAQgB,EAAU,GAAGf,SAAWP,EAAKO,OARvC,kCASJJ,EAAW,CAChCC,YAAaJ,EACbA,KAAMsB,EAAU,KAXS,eASrBE,EATqB,yBAapBA,GAboB,iCAgBtBF,EAAU,IAhBY,4CAAH,sDUffG,EAAmBC,YAAK,CACnCnI,IAAK,mBACLoI,QAAStB,EACTuB,iBAAkB,EViCjBrI,EUjCqC,eVkCtC,YAAyB,IAAtBsI,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACJC,EAAaC,aAAaC,QAAQ1I,GACtB,MAAdwI,GACFF,EAAQlC,KAAKuC,MAAMH,IAGrBD,GAAM,SAACK,GACDA,aAAoBC,IACtBJ,aAAaK,WAAW9I,GAExByI,aAAaM,QAAQ/I,EAAKoG,KAAKC,UAAUuC,YUzCpCI,EAAmBC,YAAS,CACvCjJ,IAAK,sBACLkJ,IAAI,WAAD,4BAAE,iCAAA/F,EAAA,6DAAS+F,EAAT,EAASA,IACNC,EAAWD,EAAIhB,GADlB,SAEgBJ,EAAgB,CAAErB,KAAM0C,IAFxC,cAEG1C,EAFH,yBAGIA,GAHJ,2CAAF,mDAAC,KAOO2C,EAAmBjB,YAAK,CACnCnI,IAAK,mBACLoI,QAASY,IAIEK,EAAeC,YAAe,CACzCtJ,IAAK,eACLkJ,IACE,SAAC3D,GAAD,8CACA,6BAAApC,EAAA,+DAAS+F,IAAT,SACqB3C,EAAQ,CAAEhB,OAD/B,cACQkB,EADR,yBAESA,GAFT,2CADA,yDC1BS8C,EAAiBpB,YAAK,CACjCnI,IAAK,iBACLoI,QAAS,IAGEoB,EAAgBrB,YAAK,CAChCnI,IAAK,gBACLoI,QAAS,IAGEqB,EAAmBtB,YAAK,CACnCnI,IAAK,mBACLoI,QAAS,IAGEsB,EAAmBvB,YAAK,CACnCnI,IAAK,mBACLoI,QAAS,CACPjE,WAAW,EACXwF,IAAI,KAKKC,EAAqBX,YAAS,CACzCjJ,IAAK,qBACLkJ,IAAI,WAAD,4BAAE,+CAAA/F,EAAA,0DAAS+F,EAAT,EAASA,KACRK,GADD,EAGuBL,EAAIQ,GAAtBvF,EAHL,EAGKA,UAAWwF,EAHhB,EAGgBA,GACblD,EAAOyC,EAAIE,GACXzD,EAAOuD,EAAIO,IAGbE,IAAMxF,EARP,iCASsBuB,EAAS,CAC9BC,OACAC,EAAE,YAAD,OAAca,EAAKlB,GAAnB,qBACAH,OAAM,SAACyE,GACR,MAAMA,KAbP,cASK5B,EATL,yBAeMA,GAfN,YAiBC9D,EAjBD,kCAkBsBuB,EAAS,CAC9BC,OACAC,EAAG,oBACFR,OAAM,SAACyE,GACR,MAAMA,KAtBP,eAkBK5B,EAlBL,yBAwBMA,GAxBN,YA0BC0B,EA1BD,kCA2BsBjE,EAAS,CAC9BC,OACAC,EAAE,YAAD,OAAca,EAAKlB,MACnBH,OAAM,SAACyE,GACR,MAAMA,KA/BP,eA2BK5B,EA3BL,yBAiCMA,GAjCN,yBAqCoBvC,EAAS,CAC9BC,SACCP,OAAM,SAACyE,GACR,MAAMA,KAxCL,eAqCG5B,EArCH,yBA0CIA,GA1CJ,4CAAF,mDAAC,KA8CO6B,EAAqB3B,YAAK,CACrCnI,IAAK,qBACLoI,QAASwB,IAIEG,EAAkBd,YAAS,CACtCjJ,IAAK,kBACLkJ,IAAK,YAAc,IACTrD,GAAaqD,EADL,EAAVA,KACmBY,GAAjBjE,SACFmE,EAAWnE,EAASmC,OACpBiC,EAAiBpE,EAASqE,QAAO,SAACC,GAAD,OAAUA,EAAKhG,aAAW6D,OAEjE,MAAO,CACLiC,iBACAG,iBAHuBJ,EAAWC,MAS3BI,EAAmBlC,YAAK,CACnCnI,IAAK,mBACLoI,QAAS,KAGEkC,EAAyBrB,YAAS,CAC7CjJ,IAAK,yBACLkJ,IAAK,YAAc,IACXtH,GAAOsH,EADG,EAAVA,KACWmB,GACjB,MAAM,GAAN,OAAUzI,EAAKoG,OAAf,WAKSuC,EAAoBjB,YAAe,CAC9CtJ,IAAK,oBACLkJ,IACE,SAAC3D,GAAD,8CACA,6BAAApC,EAAA,6DAAS+F,EAAT,EAASA,KACHM,GADN,SAEyBlE,EAAQ,CAAEC,OAAMH,OAAM,SAACyE,GAC5C,MAAMA,KAHV,cAEQ5B,EAFR,yBAKSA,GALT,2CADA,yDAUSuC,EAAoBC,YAAW,CAC1CzK,IAAK,oBACLoI,QAASmC,IC5HEG,EAAmB,SAACC,GAC/B,IAAMC,EAAaC,YAAkBF,GAMrC,OAJsB,WACpBC,GAAW,SAACE,GAAD,OAAOA,EAAI,O,OCmIXC,MA1Hf,YAAiC,IAATtE,EAAQ,EAARA,KAChBuE,EAAqBN,EAAiBnB,GADd,EAEQ0B,YAAeZ,GAFvB,mBAEvBa,EAFuB,KAEVC,EAFU,KAGxBC,EAAiBC,YAAef,GAC9BgB,EAAaC,sBAAbD,SAqDR,OACE,eAAC,IAAD,CACEE,GAAG,UACHC,GAAI,CACFC,UAAW,CAAC,OAAQ,KAAM,OAC1BrI,UAAW,QACXsI,GAAI,IACJC,GAAI,GACJC,SAAU,YAPd,UAUE,cAAC,IAAD,CAASL,GAAG,KAAKC,GAAI,CAAEpL,MAAO,SAA9B,0BAGA,cAAC,IAAD,CACEyL,YAAY,sBACZC,KAAM,GACNC,MAAOd,EACPe,SArEqB,SAACC,GAC1Bf,EAAee,EAAEC,OAAOH,UAuEtB,eAAC,IAAD,CACEP,GAAI,CACF3K,eAAgB,gBAChBP,MAAO,MACPC,OAAQ,YAJZ,UAOE,cAAC,IAAD,CAAKiL,GAAI,CAAEpL,MAAO,SAAlB,SAA8B+K,IAC9B,cAAC,IAAD,CACEgB,aAAW,gBACXC,QAAQ,YACRC,QA/EkB,SAACJ,GACpBhB,GAOU,OAAXA,QAAW,IAAXA,OAAA,EAAAA,EAAalD,QAAS,IACxBsD,EAAS,oCAAsB,CAC7BiB,WAAY,OACZC,aAAa,KAIjB,OAAI/F,QAAJ,IAAIA,OAAJ,EAAIA,EAAMgG,WNXS,SAAC,GAAD,IAAGhH,EAAH,EAAGA,KAAH,IAASiH,QAAT,OACrBtI,EAAO,CACLC,SAAS,UAAD,YAFW,MAAmB,GAAnB,EAEX,UACRE,QAAS,CACP4B,OAAQ,OACR3D,KAAM4D,KAAKC,UAAUZ,MAEtBZ,MAAK,SAACC,GACP,OAAOA,KMIL6H,CAAQ,CACNlH,KAAM,CACJmH,MAAO1B,EACP/G,WAAW,GAEbuI,QAASjG,EAAKgG,SAASlH,KAEtBV,MAAK,SAACC,GACY,MAAbA,EAAIU,MAA6B,MAAbV,EAAIU,KAC1B8F,EAAS,iDAAmC,CAC1CiB,WAAY,QACZC,aAAa,KAGflB,EAAS,qBAAsB,CAC7BiB,WAAY,UACZC,aAAa,IAEfxB,KAEFG,EAAe,OAEhB/F,OAAM,WACLkG,EAAS,iDAAmC,CAC1CiB,WAAY,QACZC,aAAa,IAEfrB,EAAe,OAzCnBG,EAAS,gCAAuB,CAC9BiB,WAAY,OACZC,aAAa,KAwEb,kCCXOK,OAtFf,YAOI,IANF1I,EAMC,EANDA,UACA8F,EAKC,EALDA,eACAG,EAIC,EAJDA,iBACA0C,EAGC,EAHDA,sBACAnD,EAEC,EAFDA,GACAoD,EACC,EADDA,eAEA,OACE,eAAC,IAAD,CAAMtB,GAAI,CAAEuB,SAAU,QAAtB,UACE,eAAC,IAAD,CACEvB,GAAI,CACFC,UAAW,CAAC,MAAO,KAAM,OACzBjL,SAAU,CAAC,EAAG,KAAM,EAAG,GACvBwM,GAAI,OACJC,GAAI,OACJhK,WAAY,OACZ3B,QAAS,YACTpB,gBAAiB,YACjBqB,aAAc,MACd0C,UAAW,gBACX/C,QAAUgD,EAAkB,EAAN,IAX1B,8BAce8F,KAEf,eAAC,IAAD,CACEwB,GAAI,CACFC,UAAW,CAAC,MAAO,KAAM,OACzBjL,SAAU,CAAC,EAAG,KAAM,EAAG,GACvBwM,GAAI,OACJC,GAAI,OACJhK,WAAY,OACZ3B,QAAS,YACTpB,gBAAiB,WACjBqB,aAAc,MACd0C,UAAW,cACX/C,QAAUgD,EAAkB,EAAN,IAX1B,iCAckBiG,KAElB,cAAC,IAAD,CACEqB,GAAI,CACFvI,WAAY,OACZ3B,QAAS,WACTJ,QAAS,GACTuK,UAAW,CAAC,SALhB,SAQE,cAAC,IAAD,CACEyB,eAAgBhJ,EAChB8H,SAAUa,EACVlM,MAAM,wBACNwL,aAAW,4BAGf,cAAC,IAAD,CACEX,GAAI,CACFvI,WAAY,OACZ3B,QAAS,WACTJ,QAAS,GACTuK,UAAW,CAAC,QACZwB,GAAI,CAAC,OAAQ,KAAM,QANvB,SASE,cAAC,IAAD,CACEC,eAAgBxD,EAChBsC,SAAUc,EACVnM,MAAM,kBACNwL,aAAW,0B,SCxDNgB,GAbF,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,GAAkB,IAAd7B,UAAc,MAAT,GAAS,EAC1C,OACE,cAAC,IAAD,CAAaA,GAAE,eAAOA,GAAM6B,GAAIA,EAAI9B,GAAI+B,IAAxC,SACGF,KCkFQG,OA5Ef,YAAiD,IAAzBZ,EAAwB,EAAxBA,MAAOrH,EAAiB,EAAjBA,GAAIpB,EAAa,EAAbA,UAC3BsJ,EAAoB/C,EAAiBnB,GACnC+B,EAAaC,sBAAbD,SAEFoC,EAAgB,uCAAG,WAAOxB,GAAP,SAAA/I,EAAA,sEACjB6C,EAAW,CAAEC,KAAM,CAAEV,MAAMW,QAAS,CAAE/B,WAAW,KAAUiB,OAC/D,SAACyE,GACCyB,EAASzB,EAAK,CACZ0C,WAAY,QACZC,aAAa,OALI,OASvBlB,EAAS,oCAAqC,CAC5CiB,WAAY,UACZC,aAAa,IAEfiB,IAbuB,2CAAH,sDAgBhBE,EAAgB,uCAAG,WAAOzB,GAAP,SAAA/I,EAAA,6DACvBmI,EAAS,yBAAqB,CAC5BiB,WAAY,OACZC,aAAa,IAHQ,SAKjBlG,EAAW,CAAEL,KAAM,CAAEV,QAAQH,OAAM,SAACyE,GACxCyB,EAASzB,EAAK,CACZ0C,WAAY,QACZC,aAAa,OARM,OAWvBiB,IAXuB,2CAAH,sDActB,OACE,eAAC,IAAD,CAAMpB,QAASlI,EAAY,YAAc,cAAzC,UACE,cAAC,GAAD,CACEsH,GAAI,CACFC,UAAW,MACX7K,QAAS,OACTE,WAAY,UAEduM,GAAE,gBAAW/H,GANf,SAQE,cAAC,IAAD,CAAKkG,GAAI,CAAEmC,aAAc,cAAzB,SAA0ChB,MAE5C,cAAC,IAAD,CACEN,QAASnI,EAAYwJ,EAAmBD,EACxCtB,aACEjI,EAAY,yBAAsB,oCAEpCsH,GAAI,CACF7H,OAAQ,IACRiK,WAAY,YACZC,gBAAiB,OACjBtM,aAAc,IACdf,SAAU,CAAC,EAAG,EAAG,EAAG,GACpBiL,UAAW,MACX,UAAW,CACTrL,MAAO8D,EAAY,WAAa,YAChC2J,gBAAiB3J,EAAY,WAAa,cAdhD,SAkBGA,EAAY,cAAC,KAAD,IAAe,cAAC,KAAD,UCvCrB4J,OAhCf,YAAkC,IAAblI,EAAY,EAAZA,SACnB,OACE,eAAC,IAAD,CAAMmI,QAAS,CAAC,GAAIvC,GAAI,CAAElL,MAAO,MAAOC,OAAQ,aAAhD,UACGyN,MAAMC,QAAQrI,IACbA,EAASmC,OAAS,GAClBnC,EAASsI,KAAI,SAAClI,GAAD,OAAU,wBAAC,GAAD,2BAAkBA,GAAlB,IAAwBjG,IAAKiG,EAAKV,SAC1D0I,MAAMC,QAAQrI,IAAiC,IAApBA,EAASmC,QACnC,qD,SC+GOoG,OAnHf,YAQI,IAPFtI,EAOC,EAPDA,WACAuI,EAMC,EANDA,cACAC,EAKC,EALDA,eACAC,EAIC,EAJDA,gBACAC,EAGC,EAHDA,eACAC,EAEC,EAFDA,iBACAC,EACC,EADDA,YAEQC,EAAiB7I,EAAjB6I,MAAOC,EAAU9I,EAAV8I,MAEf,OACE,eAAC,IAAD,CACEnD,GAAI,CACF1K,WAAY,SACZiM,SAAU,OACVlM,eAAgB,gBAChB+N,EAAG,OACHxL,UAAW,QANf,UASE,eAAC,IAAD,CACEoI,GAAI,CACFhL,SAAU,EACViL,UAAW,CAAC,OAAQ,QACpB5H,UAAW,SACXoJ,GAAI,CAAC,OAAQ,QALjB,gCAQYyB,KAEZ,eAAC,IAAD,CAAMlD,GAAI,CAAEC,UAAW,CAAC,OAAQ,SAAhC,UACE,cAAC,IAAD,CACEU,aAAW,+BACXX,GAAI,CACFlL,MAAO,CAAC,MAAO,OAAQ,QACvBmD,OAAQ,OACRlD,OAAQ,WAEVsO,SAA0B,IAAhBJ,EACVpC,QAASiC,EARX,SAUE,cAAC,KAAD,MAEF,cAAC,IAAD,CACEnC,aAAW,qBACXX,GAAI,CACFlL,MAAO,CAAC,MAAO,OAAQ,QACvBmD,OAAQ,OACRlD,OAAQ,WAEVsO,SAAUJ,EAAc,EACxBpC,QAASgC,EARX,SAUE,cAAC,KAAD,MAEF,cAAC,IAAD,CACElC,aAAW,yBACXJ,MAAO0C,EACPzC,SAAUwC,EACVhD,GAAI,CAAElL,MAAO,QAJf,SAMGqO,GACC,YAAIX,MAAMW,GAAOG,QAAQZ,KAAI,SAACrD,GAAD,OAC3B,wBAAgBkB,MAAOlB,EAAI,EAA3B,SACGA,EAAI,GADMA,QAMnB,cAAC,IAAD,CACEsB,aAAW,uBACXX,GAAI,CACFlL,MAAO,CAAC,MAAO,OAAQ,QACvBmD,OAAQ,OACRlD,OAAQ,oBAEVsO,SAAUJ,GAAeE,EACzBtC,QAAS+B,EARX,SAUE,cAAC,KAAD,MAGF,cAAC,IAAD,CACEjC,aAAW,+BACXX,GAAI,CACFlL,MAAO,CAAC,MAAO,OAAQ,QACvBmD,OAAQ,OACRlD,OAAQ,WAEVsO,SAAUJ,IAAgBE,EAC1BtC,QAASkC,EARX,SAUE,cAAC,KAAD,aCgBKQ,OAtGf,WAA0B,IAAD,EACU3D,YAAevB,GAAxCjE,EADe,EACfA,SAAUC,EADK,EACLA,WADK,EAEsBuF,YAAetB,GAApDE,EAFe,EAEfA,eAAgBG,EAFD,EAECA,iBAFD,EAGOa,YAAevB,GAHtB,mBAGhBuF,EAHgB,KAGPC,EAHO,OAIejE,YAAexB,GAJ9B,mBAIhBiF,EAJgB,KAIHS,EAJG,KAejBd,EAAgB,WACpBc,GAAe,SAACxJ,GAAD,OAAUA,EAAO,MAE5B2I,EAAiB,WACrBa,GAAe,SAACxJ,GAAD,OAAUA,EAAO,MAE5B4I,EAAkB,WACtBY,EAAe,IAEXX,EAAiB,WACrBW,EAAc,OAACrJ,QAAD,IAACA,OAAD,EAACA,EAAY8I,QAEvBH,EAAmB,SAACvC,GACxBiD,EAAeC,OAAOlD,EAAEC,OAAOH,SASjC,OANAqD,qBAAU,WACJX,GAAW,OAAG5I,QAAH,IAAGA,OAAH,EAAGA,EAAY8I,QAC5BO,EAAe,MAKjB,eAAC,IAAD,CACE3D,GAAG,UACHjI,GAAG,QACHkI,GAAI,CACFC,UAAW,CAAC,OAAQ,KAAM,OAC1B4D,UAAW,QACX5O,UAAW,CAAC,KAAM,KAAM,SACxBiL,GAAI,GACJ4D,SAAU,QARd,UAWE,cAAC,IAAD,CAAK9D,GAAI,CAAElL,MAAO,MAAOC,OAAQ,YAAjC,SACE,cAAC,GAAD,CACEyJ,eAAgBA,EAChBG,iBAAkBA,EAClB0C,sBA9C2B,WACjCoC,EAAW,2BAAKD,GAAN,IAAe9K,WAAY8K,EAAQ9K,cA8CvCA,UAAS,OAAE8K,QAAF,IAAEA,OAAF,EAAEA,EAAS9K,UACpB4I,eA7CqB,WAC3BmC,EAAW,2BAAKD,GAAN,IAAetF,IAAKsF,EAAQtF,OA6ChCA,GAAE,OAAEsF,QAAF,IAAEA,OAAF,EAAEA,EAAStF,OAGjB,cAAC,IAAD,CACE8B,GAAI,CACFlL,MAAO,MACPC,OAAQ,YACR+C,GAAI,YACJ/B,aAAc,OALlB,SAQE,cAAC,GAAD,CACEsE,WAAYA,EACZ4I,YAAaA,EACbJ,eAAgBA,EAChBD,cAAeA,EACfE,gBAAiBA,EACjBC,eAAgBA,EAChBC,iBAAkBA,MAItB,cAAC,GAAD,CAAW5I,SAAUA,IAErB,cAAC,IAAD,CACE4F,GAAI,CACFlL,MAAO,MACPC,OAAQ,YACR+C,GAAI,YACJ/B,aAAc,OALlB,SAQE,cAAC,GAAD,CACEsE,WAAYA,EACZ4I,YAAaA,EACbJ,eAAgBA,EAChBD,cAAeA,EACfE,gBAAiBA,EACjBC,eAAgBA,EAChBC,iBAAkBA,UC0Jbe,OAhQf,YAA8C,IAAZC,EAAW,EAAXA,QAChC,OACE,eAAC,IAAD,CACEjE,GAAG,UACHjI,GAAG,QACHkI,GAAI,CACFC,UAAW,CAAC,OAAQ,KAAM,OAC1B4D,UAAW,QACX5O,UAAW,CAAC,KAAM,KAAM,SACxBiL,GAAI,GACJ4D,SAAU,QARd,UAYE,cAAC,IAAD,CAAK9D,GAAI,CAAElL,MAAO,MAAOC,OAAQ,YAAjC,SACE,eAAC,IAAD,CAAMiL,GAAI,CAAEuB,SAAU,QAAtB,UACE,cAAC,IAAD,CACEvB,GAAI,CACFC,UAAW,CAAC,MAAO,KAAM,OACzBjL,SAAU,CAAC,EAAG,KAAM,EAAG,GACvBwM,GAAI,OACJC,GAAI,OACJhK,WAAY,OACZ3B,QAAS,YACTJ,QAAS,GARb,6BAaA,cAAC,IAAD,CACEsK,GAAI,CACFC,UAAW,CAAC,MAAO,KAAM,OACzBjL,SAAU,CAAC,EAAG,KAAM,EAAG,GACvBwM,GAAI,OACJC,GAAI,OACJhK,WAAY,OACZ3B,QAAS,YACTJ,QAAS,GARb,iCAaA,cAAC,IAAD,CACEsK,GAAI,CACFvI,WAAY,OACZ3B,QAAS,WACTJ,QAAS,GACTuK,UAAW,CAAC,QACZwB,GAAI,CAAC,OAAQ,KAAM,QANvB,SASE,cAAC,IAAD,CAAQtM,MAAM,wBAAmBwL,aAAW,4BAE9C,cAAC,IAAD,CACEX,GAAI,CACFvI,WAAY,OACZ3B,QAAS,WACTJ,QAAS,GACTuK,UAAW,CAAC,QACZwB,GAAI,CAAC,OAAQ,KAAM,QANvB,SASE,cAAC,IAAD,CAAQtM,MAAM,mBAAcwL,aAAW,2BAK7C,cAAC,IAAD,CACEX,GAAI,CACFlL,MAAO,MACPC,OAAQ,YACR+C,GAAI,YACJ/B,aAAc,OALlB,SAQE,eAAC,IAAD,CACEiK,GAAI,CACF1K,WAAY,SACZiM,SAAU,OACVlM,eAAgB,gBAChB+N,EAAG,OACHxL,UAAW,QANf,UASE,eAAC,IAAD,CACEoI,GAAI,CACFhL,SAAU,EACViL,UAAW,CAAC,OAAQ,QACpB5H,UAAW,SACXoJ,GAAI,CAAC,OAAQ,QALjB,gCAQW,cAAC,IAAD,CAASzB,GAAI,CAAElL,MAAO,OAAQmD,OAAQ,aAEjD,eAAC,IAAD,CAAM+H,GAAI,CAAEC,UAAW,CAAC,OAAQ,SAAhC,UACE,cAAC,IAAD,CACEU,aAAW,+BACXX,GAAI,CACFlL,MAAO,CAAC,MAAO,OAAQ,QACvBmD,OAAQ,OACRlD,OAAQ,WAEVsO,UAAU,EAPZ,SASE,cAAC,KAAD,MAEF,cAAC,IAAD,CACE1C,aAAW,qBACXX,GAAI,CACFlL,MAAO,CAAC,MAAO,OAAQ,QACvBmD,OAAQ,OACRlD,OAAQ,WAEVsO,UAAU,EAPZ,SASE,cAAC,KAAD,MAEF,cAAC,IAAD,CAAQ1C,aAAW,sBAAiBX,GAAI,CAAElL,MAAO,QAAjD,SAEI,YAAI0N,MAAM,IAAIc,QAAQZ,KAAI,SAACrD,GAAD,OACxB,wBAAgBkB,MAAOlB,EAAI,EAA3B,SACGA,EAAI,GADMA,QAMnB,cAAC,IAAD,CACEsB,aAAW,uBACXX,GAAI,CACFlL,MAAO,CAAC,MAAO,OAAQ,QACvBmD,OAAQ,OACRlD,OAAQ,oBAEVsO,UAAU,EAPZ,SASE,cAAC,KAAD,MAGF,cAAC,IAAD,CACE1C,aAAW,+BACXX,GAAI,CACFlL,MAAO,CAAC,MAAO,OAAQ,QACvBmD,OAAQ,OACRlD,OAAQ,WAEVsO,UAAU,EAPZ,SASE,cAAC,KAAD,cAMR,cAAC,IAAD,CAAMrD,GAAI,CAAE3K,eAAgB,SAAUC,WAAY,UAAlD,SACG0O,EACC,cAAC,IAAD,CAAKhE,GAAI,CAAElL,MAAO,MAAOmD,OAAQ,OAAQI,UAAW,UAApD,SACE,4EAGF,cAAC,IAAD,CAAS2H,GAAI,CAAElL,MAAO,MAAOmD,OAAQ,WAIzC,cAAC,IAAD,CACE+H,GAAI,CACFlL,MAAO,MACPC,OAAQ,YACR+C,GAAI,YACJ/B,aAAc,OALlB,SAQE,eAAC,IAAD,CACEiK,GAAI,CACF1K,WAAY,SACZiM,SAAU,OACVlM,eAAgB,gBAChB+N,EAAG,OACHxL,UAAW,QANf,UASE,eAAC,IAAD,CACEoI,GAAI,CACFhL,SAAU,EACViL,UAAW,CAAC,OAAQ,QACpB5H,UAAW,SACXoJ,GAAI,CAAC,OAAQ,QALjB,gCAQW,cAAC,IAAD,CAASzB,GAAI,CAAElL,MAAO,OAAQmD,OAAQ,aAEjD,eAAC,IAAD,CAAM+H,GAAI,CAAEC,UAAW,CAAC,OAAQ,SAAhC,UACE,cAAC,IAAD,CACEU,aAAW,+BACXX,GAAI,CACFlL,MAAO,CAAC,MAAO,OAAQ,QACvBmD,OAAQ,OACRlD,OAAQ,WAEVsO,UAAU,EAPZ,SASE,cAAC,KAAD,MAEF,cAAC,IAAD,CACE1C,aAAW,qBACXX,GAAI,CACFlL,MAAO,CAAC,MAAO,OAAQ,QACvBmD,OAAQ,OACRlD,OAAQ,WAEVsO,UAAU,EAPZ,SASE,cAAC,KAAD,MAEF,cAAC,IAAD,CAAQ1C,aAAW,sBAAiBX,GAAI,CAAElL,MAAO,QAAjD,SAEI,YAAI0N,MAAM,IAAIc,QAAQZ,KAAI,SAACrD,GAAD,OACxB,wBAAgBkB,MAAOlB,EAAI,EAA3B,SACGA,EAAI,GADMA,QAMnB,cAAC,IAAD,CACEsB,aAAW,uBACXX,GAAI,CACFlL,MAAO,CAAC,MAAO,OAAQ,QACvBmD,OAAQ,OACRlD,OAAQ,oBAEVsO,UAAU,EAPZ,SASE,cAAC,KAAD,MAGF,cAAC,IAAD,CACE1C,aAAW,+BACXX,GAAI,CACFlL,MAAO,CAAC,MAAO,OAAQ,QACvBmD,OAAQ,OACRlD,OAAQ,WAEVsO,UAAU,EAPZ,SASE,cAAC,KAAD,kB,mCCzOCY,G,oDAhBb,WAAYC,GAAQ,IAAD,+BACjB,cAAMA,IACDC,MAAQ,CAAEC,UAAU,GAFR,E,2CAQnB,WACE,OAAIC,KAAKF,MAAMC,SACN,cAAC,GAAD,CAAwBJ,SAAO,IAEjCK,KAAKH,MAAMtC,Y,uCARpB,SAAgChI,GAC9B,MAAO,CAAEwK,UAAU,O,GANYE,IAAMC,WCW1BC,GAVE,SAACC,GAOhB,OANqB,SAAC,GAAkB,IAAbP,EAAY,oBAC/BQ,EAAatF,YAAkB3C,GAC/BzB,EAAO2J,YAAuBhH,GACpC,OAAO,cAAC8G,EAAD,aAAkBzJ,KAAMA,EAAM0J,WAAYA,GAAgBR,MCO/DU,GAAuBJ,GAASlF,GAevBuF,OAbf,WACE,OACE,eAAC,IAAD,CAAM7E,GAAI,CAAEuB,SAAU,QAAtB,UACE,cAACqD,GAAD,IACA,cAAC,GAAD,UACE,cAAC,IAAME,SAAP,CAAgBC,SAAU,cAAC,GAAD,IAA1B,SACE,cAAC,GAAD,Y,2BCkFKC,OApGf,YAAkD,IAA9BC,EAA6B,EAA7BA,QAASjK,EAAoB,EAApBA,KAAM0J,EAAc,EAAdA,WAAc,EAK3CQ,eAHFC,EAF6C,EAE7CA,SACAC,EAH6C,EAG7CA,aACaC,EAJgC,EAI7CC,UAAaD,OAOf,OACE,uBAAME,SAAUH,GALQ,SAACpL,GACzB0K,EAAW,eAAK1K,IAChBiL,OAGA,UACE,eAAC,IAAD,CACEjF,GAAI,CACF3K,eACEgQ,EAAO/J,MAAQ+J,EAAOpK,OAASoK,EAAO9J,OAClC,gBACA,YALV,WAQI8J,EAAO/J,MAAQ+J,EAAOpK,OAASoK,EAAO9J,SACtC,cAAC,IAAD,CAAK3G,MAAM,MAAX,4CAEF,cAAC,IAAD,CAAO+L,aAAW,gBAAgB6E,KAAK,SAAS3E,QAASoE,OAE3D,eAAC,IAAD,WACE,cAAC,IAAD,CAAKjF,GAAI,CAAElL,MAAO,SAAlB,oBACA,cAAC,IAAD,2BACMqQ,EAAS,OAAQ,CAAEM,UAAU,KADnC,IAEEpF,YAAY,sBACZqF,aAA8B,aAAf1K,EAAKmJ,OAAwBnJ,EAAKgG,SAAS1F,MAAS,SAGvE,eAAC,IAAD,WACE,cAAC,IAAD,CAAK0E,GAAI,CAAElL,MAAO,SAAlB,oBACA,cAAC,IAAD,2BACMqQ,EAAS,QAAS,CAAEM,UAAU,KADpC,IAEED,KAAK,QACLnF,YAAY,iBACZqF,aACkB,aAAf1K,EAAKmJ,OAAwBnJ,EAAKgG,SAAS/F,OAAU,SAI5D,eAAC,IAAD,CAAO+E,GAAI,CAAE3K,eAAgB,cAA7B,UACE,cAAC,IAAD,CAAK2K,GAAI,CAAElL,MAAO,SAAlB,iCACA,cAAC,IAAD,2BACMqQ,EAAS,SAAU,CAAEM,UAAU,KADrC,IAEElF,MAAM,OACNmB,eACiB,aAAf1G,EAAKmJ,OAAiD,SAAzBnJ,EAAKgG,SAASzF,OAE7CD,KAAK,eAGT,eAAC,IAAD,CAAO0E,GAAI,CAAE3K,eAAgB,cAA7B,UACE,cAAC,IAAD,CAAK2K,GAAI,CAAElL,MAAO,SAAlB,qBACA,cAAC,IAAD,2BACMqQ,EAAS,SAAU,CAAEM,UAAU,KADrC,IAEElF,MAAM,SACNmB,eACiB,aAAf1G,EAAKmJ,OAAiD,WAAzBnJ,EAAKgG,SAASzF,OAE7CD,KAAK,eAGT,cAAC,IAAD,CAAQkK,KAAK,SAASxF,GAAI,CAAElL,MAAO,QAAnC,wB,SC1BS6Q,GAzCG,SAAClB,GACjB,IAAMmB,EAAiBC,SAASC,eAAe,SAqC/C,OApCqB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,OAAQd,EAAwB,EAAxBA,QAAYf,EAAY,qCACtD,OAAO6B,EACHC,IAASC,aACP,cAAC,IAAD,CACEjG,GAAI,CACFI,SAAU,QACV8F,IAAK,EACLpR,MAAO,QACPmD,OAAQ,QACR4L,UAAW,QACXxO,eAAgB,SAChBC,WAAY,SACZ6Q,OAAQ,GACRzR,gBAAiB,oBAVrB,SAaE,cAAC,IAAD,CACEsL,GAAI,CACFC,UAAW,CAAC,MAAO,MAAO,MAAO,OACjCvL,gBAAiB,QACjBoB,QAAS,CAAC,OAAQ,WAAY,wBAJlC,SAOE,cAAC2O,EAAD,2BAAsBP,GAAtB,IAA6Be,QAASA,SAG1CW,GAEF,OCzBFQ,GAAwBC,aAAQV,GAAWnB,GAAnB6B,CAA6BrB,IA2C5CsB,OAzCf,WAAmB,IAAD,EACkBC,eADlB,mBACTC,EADS,KACEC,EADF,OAEkBC,oBAAS,GAF3B,mBAETC,EAFS,KAEEC,EAFF,KAOVC,EAAoB,WACxBD,GAAcD,IAEhB,OACE,eAAC,IAAD,CACE5G,GAAG,SACHC,GAAI,CACFI,SAAU,WACV8F,IAAK,EACLY,KAAM,EACNhS,MAAO,QACPgB,QAAS,YACTqQ,OAAQ,MARZ,UAWE,eAAC,IAAD,CAAMpG,GAAG,MAAMC,GAAI,CAAE3K,eAAgB,iBAArC,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEsL,aAAW,qBACXC,QAAQ,UACRC,QAASgG,EAHX,kCAQF,cAAC,IAAD,UACE,cAAC,IAAD,CAAQrG,SA9BU,SAACC,GACzBgG,EAA2B,YAAdD,EAA0B,OAAS,mBAgC9C,cAACJ,GAAD,CAAuBnB,QAAS4B,EAAmBd,OAAQY,QCmDlDI,IChFTC,GAAoBrB,IDD1B,YAA0C,IAAD,IAAjBV,EAAiB,EAAjBA,QAASzK,EAAQ,EAARA,KACzByM,EAAmBhI,EAAiBlB,GACpCiE,EAAoB/C,EAAiBnB,GAFJ,EAOnCoH,eAHFC,EAJqC,EAIrCA,SACAC,EALqC,EAKrCA,aACaC,EANwB,EAMrCC,UAAaD,OAEPlE,EAAqB3G,EAArB2G,MAAOzI,EAAc8B,EAAd9B,UAETuJ,EAAgB,uCAAG,+BAAAvK,EAAA,iEAASsC,YAAT,MAAgB,GAAhB,WACVO,EAAW,CAAEC,OAAMC,QAAST,IAAQZ,MAAK,SAACC,GAAD,OAASA,KADxC,mFAAH,sDAUtB,OACE,uBAAMkM,SAAUH,GARW,SAACpL,GAC5BiI,EAAiB,CAAEjI,SACnBiN,IACAjF,IACAiD,OAIA,UACE,cAAC,IAAD,CAAMjF,GAAI,CAAE3K,eAAgB,YAA5B,SACE,cAAC,IAAD,CAAOsL,aAAW,gBAAgB6E,KAAK,SAAS3E,QAASoE,MAE3D,cAAC,IAAD,CAASlF,GAAG,KAAZ,qCACA,cAAC,IAAD,2BACMoF,EAAS,QAAS,CAAEM,UAAU,EAAMyB,UAAW,EAAGC,UAAW,OADnE,IAEE9G,YAAY,kCACZC,KAAM,GACNoF,aAAcvE,KAEhB,cAAC,IAAD,CAAMnB,GAAI,CAAE3K,eAAgB,UAA5B,SACE,eAAC,IAAD,CAAO2K,GAAI,CAAE3K,eAAgB,UAA7B,2BAEE,cAAC,IAAD,2BACM8P,EAAS,cADf,IAEEzD,eAAgBhJ,EAChBsH,GAAI,CAAEwB,GAAI,gBAIhB,eAAC,IAAD,CACExB,GAAI,CACF3K,eAAgB,SAChB4C,OAAQ,OACRrD,MAAO,MACPI,SAAU,QALd,UAQ2B,cAAlB,OAANqQ,QAAM,IAANA,GAAA,UAAAA,EAAQlE,aAAR,eAAeqE,OAAuB,yCACd,eAAlB,OAANH,QAAM,IAANA,GAAA,UAAAA,EAAQlE,aAAR,eAAeqE,OACd,mDAEJ,cAAC,IAAD,CAAMxF,GAAI,CAAE3K,eAAgB,YAA5B,SACE,cAAC,IAAD,CAAQsL,aAAW,4BAA4B6E,KAAK,SAApD,4BC4DO4B,OAhHf,WACE,IAAMpF,EAAoB/C,EAAiBnB,GACnChE,EAAOuN,cAAPvN,GACFwN,EAAUC,cAHK,EAIab,oBAAS,GAJtB,mBAIdC,EAJc,KAIHC,EAJG,KAKfpM,EAAOoF,YAAeb,EAAkBjF,IACtCqH,EAAsD3G,EAAtD2G,MAAOqG,EAA+ChN,EAA/CgN,WAAYC,EAAmCjN,EAAnCiN,WAAY/O,EAAuB8B,EAAvB9B,UAAWuI,EAAYzG,EAAZyG,QAE1C3F,EADKsE,YAAehC,EAAaqD,IACjC3F,KAKFuL,EAAoB,WACxBD,GAAcD,IAQhB,OACE,eAAC,IAAD,CACE3G,GAAI,CACF3K,eAAgB,SAChBC,WAAY,SACZsC,UAAW,QAJf,UAOE,eAAC,IAAD,CACEoI,GAAI,CACFtL,gBAAiB,QACjBqB,aAAc,MACdD,QAAS,CAAC,iBAAkB,kBAC5BmK,UAAW,CAAC,MAAO,MAAO,MAAO,OACjCrL,MAAO,SANX,UASE,cAAC,IAAD,CAASmL,GAAG,KAAZ,uCACA,eAAC,IAAD,CACEC,GAAI,CACF0H,EAAG,WACHrP,UAAW,OACXZ,WAAY,OACZ7B,cAAe,QAEjBmK,GAAG,KAPL,UASE,4CATF,IASiBoB,KAEjB,eAAC,IAAD,CACEnB,GAAI,CACF0H,EAAG,WACHrP,UAAW,OACXZ,WAAY,OACZ7B,cAAe,QAEjBmK,GAAG,KAPL,UASE,iDATF,IASsBrH,EAAY,MAAQ,SAE1C,eAAC,IAAD,CACEsH,GAAI,CACF0H,EAAG,WACHrP,UAAW,OACXZ,WAAY,OACZ7B,cAAe,QAEjBmK,GAAG,KAPL,UASE,2CATF,IASkBzE,KAElB,eAAC,IAAD,CAAM0E,GAAI,CAAE3K,eAAgB,gBAAiBkM,SAAU,QAAvD,UACE,eAAC,IAAD,WACE,4CACC/F,EAAmBgM,MAEtB,eAAC,IAAD,WACE,+CACChM,EAAmBiM,SAGxB,eAAC,IAAD,CACEzH,GAAI,CAAE3K,eAAgB,gBAAiBkM,SAAU,OAAQoG,GAAI,QAD/D,UAGE,cAAC,IAAD,CAAQ9G,QA5EK,SAACJ,GACpB6G,EAAQM,UA2E6B5H,GAAI,CAAEyB,GAAI,QAAzC,uBAGA,eAAC,IAAD,WACE,cAAC,IAAD,CACEb,QAAQ,UACRZ,GAAI,CAAE6H,GAAI,QACVhH,QA7Ea,SAACJ,GACxB5F,EAAW,CAAEL,SACbwH,IACAsF,EAAQQ,KAAK,MAuEL,uBAOA,cAAC,IAAD,CAAQlH,QAAQ,YAAYC,QAASgG,EAArC,6BAMN,cAACG,GAAD,CACExM,KAAMA,EACNuL,OAAQY,EACR1B,QAAS4B,QC/BFkB,OA3Ff,YAA2C,IAAZ/D,EAAW,EAAXA,QACvBsD,EAAUC,cAMhB,OACE,cAAC,IAAD,CACEvH,GAAI,CACF3K,eAAgB,SAChBC,WAAY,SACZsC,UAAW,QAJf,SAOE,eAAC,IAAD,CACEoI,GAAI,CACFtL,gBAAiB,QACjBqB,aAAc,MACdD,QAAS,CAAC,iBAAkB,kBAC5BmK,UAAW,CAAC,MAAO,MAAO,MAAO,OACjCrL,MAAO,SANX,UASE,cAAC,IAAD,CAASmL,GAAG,KAAZ,uCACA,eAAC,IAAD,CACEC,GAAI,CACF0H,EAAG,WACHrP,UAAW,OACXZ,WAAY,OACZ7B,cAAe,QAEjBmK,GAAG,KAPL,UASE,4CAAc,IACbiE,GAAW,cAAC,IAAD,CAAShE,GAAI,CAAElL,MAAO,OAAQmD,OAAQ,aAEpD,eAAC,IAAD,CACE+H,GAAI,CACF0H,EAAG,WACHrP,UAAW,OACXZ,WAAY,OACZ7B,cAAe,QAEjBmK,GAAG,KAPL,UASE,iDATF,IASqB,cAAC,IAAD,CAASC,GAAI,CAAElL,MAAO,OAAQmD,OAAQ,aAE3D,eAAC,IAAD,CACE+H,GAAI,CACF0H,EAAG,WACHrP,UAAW,OACXZ,WAAY,OACZ7B,cAAe,QAEjBmK,GAAG,KAPL,UASE,2CATF,IASiB,cAAC,IAAD,CAASC,GAAI,CAAElL,MAAO,OAAQmD,OAAQ,aAEvD,eAAC,IAAD,CAAM+H,GAAI,CAAE3K,eAAgB,gBAAiBkM,SAAU,QAAvD,UACE,eAAC,IAAD,WACE,4CACA,cAAC,IAAD,CAASvB,GAAI,CAAElL,MAAO,OAAQmD,OAAQ,aAExC,eAAC,IAAD,WACE,+CACA,cAAC,IAAD,CAAS+H,GAAI,CAAElL,MAAO,OAAQmD,OAAQ,gBAG1C,eAAC,IAAD,CACE+H,GAAI,CAAE3K,eAAgB,gBAAiBkM,SAAU,OAAQoG,GAAI,QAD/D,UAGE,cAAC,IAAD,CAAQ9G,QArEK,WACnByG,EAAQM,UAoE6B5H,GAAI,CAAEyB,GAAI,QAAzC,uBAGA,eAAC,IAAD,WACE,cAAC,IAAD,CAAQb,QAAQ,UAAUZ,GAAI,CAAE6H,GAAI,QAApC,uBAGA,cAAC,IAAD,CAAQjH,QAAQ,YAAhB,gCChEGoH,G,oDAhBb,WAAY9D,GAAQ,IAAD,+BACjB,cAAMA,IACDC,MAAQ,CAAEC,UAAU,EAAOxK,MAAO,IAFtB,E,2CAQnB,WACE,OAAIyK,KAAKF,MAAMC,SACN,cAAC,GAAD,CAAqBJ,QAASK,KAAKF,MAAMvK,QAE3CyK,KAAKH,MAAMtC,Y,uCARpB,SAAgChI,GAC9B,MAAO,CAAEwK,UAAU,EAAMxK,a,GANa0K,IAAMC,WCyCjC0D,OA5Bf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,gBAAD,CAAeC,UAAU,gBAAzB,SACE,cAAC,IAAD,CAAelS,MAAOA,EAAtB,SACE,sBAAKmS,UAAU,MAAf,UACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,YAAZ,SACE,cAAC,GAAD,UACE,cAAC,IAAMtD,SAAP,CAAgBC,SAAU,cAAC,GAAD,IAA1B,SACE,cAAC,GAAD,UAIN,cAAC,IAAD,CAAOqD,KAAK,IAAZ,SACE,cAAC,GAAD,qBCrBHC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnP,MAAK,YAAkD,IAA/CoP,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdtC,IAAS6C,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFjD,SAASC,eAAe,SAM1BuC,O","file":"static/js/main.8d4b6b49.chunk.js","sourcesContent":["import { DefaultValue } from 'recoil';\r\nimport { getUserByEmail, addUser, updateUser } from './api/user';\r\nimport { DEFAULT_USER } from './consts';\r\n\r\n// Parse Date to string in format \"DD/MM/YYYY HH:mm\"\r\nexport const handleDateToString = (stringDate) => {\r\n  const date = new Date(stringDate);\r\n\r\n  const day = date.getDate() > 9 ? date.getDate() : `0${date.getDate()}`;\r\n  const month =\r\n    date.getMonth() + 1 > 9 ? date.getMonth() + 1 : `0${date.getMonth() + 1}`;\r\n  const hours = date.getHours() > 9 ? date.getHours() : `0${date.getHours()}`;\r\n  const minutes =\r\n    date.getMinutes() + 1 > 9\r\n      ? date.getMinutes() + 1\r\n      : `0${date.getMinutes() + 1}`;\r\n\r\n  return `${day}/${month}/${date.getFullYear()} ${hours}:${minutes}`;\r\n};\r\n\r\n// CHECK USER\r\nexport const handleCheckUser = async ({ user = DEFAULT_USER }) => {\r\n  const checkUser = await getUserByEmail({ user });\r\n\r\n  if (checkUser?.length === 0) {\r\n    const response = await addUser({ user });\r\n    return response;\r\n  }\r\n\r\n  if (checkUser[0].name !== user.name || checkUser[0].gender !== user.gender) {\r\n    const response = await updateUser({\r\n      newUserInfo: user,\r\n      user: checkUser[0],\r\n    });\r\n    return response;\r\n  }\r\n\r\n  return checkUser[0];\r\n};\r\n\r\n// LocalStorage Persist (User)\r\nexport const localStorageEffect =\r\n  (key) =>\r\n  ({ setSelf, onSet }) => {\r\n    const savedValue = localStorage.getItem(key);\r\n    if (savedValue != null) {\r\n      setSelf(JSON.parse(savedValue));\r\n    }\r\n\r\n    onSet((newValue) => {\r\n      if (newValue instanceof DefaultValue) {\r\n        localStorage.removeItem(key);\r\n      } else {\r\n        localStorage.setItem(key, JSON.stringify(newValue));\r\n      }\r\n    });\r\n  };\r\n","const formsTheme = {\r\n  switch: {\r\n    backgroundColor: 'highlight',\r\n    'input:checked ~ &': {\r\n      backgroundColor: 'primary',\r\n    },\r\n  },\r\n  textarea: {\r\n    color: 'forms',\r\n    resize: 'none',\r\n    width: '80%',\r\n    margin: '20px auto',\r\n    backgroundColor: 'muted',\r\n    fontSize: [3, 4, null, 5],\r\n    maxHeight: '60vh',\r\n  },\r\n  select: {\r\n    color: 'forms',\r\n  },\r\n  label: {\r\n    fontSize: [3, 3, 4],\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    margin: '10px 0px',\r\n  },\r\n  input: {\r\n    fontSize: [3, 3, 4],\r\n    margin: '0px 0px 0px 15px',\r\n  },\r\n};\r\n\r\nexport default formsTheme;\r\n","const button = {\r\n  color: 'background',\r\n  cursor: 'pointer',\r\n  opacity: 0.7,\r\n  transition: 'opacity 0.2s ease-in-out',\r\n  textTransform: 'uppercase',\r\n  '&:hover': {\r\n    opacity: 1,\r\n  },\r\n};\r\n\r\nconst buttonsTheme = {\r\n  primary: {\r\n    ...button,\r\n    bg: 'highlight',\r\n    fontSize: [0, 2, 3],\r\n  },\r\n  secondary: {\r\n    ...button,\r\n    bg: 'secondary',\r\n  },\r\n  deleted: {\r\n    ...button,\r\n    bg: '#ff9999',\r\n  },\r\n  icon: {\r\n    ...button,\r\n    width: '100%',\r\n    height: '100%',\r\n    color: 'text',\r\n    borderColor: 'text',\r\n    border: '1px solid',\r\n    transition: 'all 0.2s ease-in-out',\r\n    '&:hover': {\r\n      opacity: 1,\r\n      color: 'secondary',\r\n    },\r\n    '&:disabled': {\r\n      opacity: 0.7,\r\n      cursor: 'default',\r\n    },\r\n  },\r\n  close: {\r\n    cursor: 'pointer',\r\n    margin: '5px',\r\n    border: '1px solid',\r\n  },\r\n};\r\n\r\nexport default buttonsTheme;\r\n","const card = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  opacity: 0.7,\r\n  padding: '10px 20px',\r\n  borderRadius: '5px',\r\n  transition: 'opacity 0.3s 0.1s ease-in-out',\r\n  '&:hover': {\r\n    opacity: 0.9,\r\n  },\r\n};\r\n\r\nconst cardsTheme = {\r\n  uncompleted: {\r\n    backgroundColor: 'lightRed',\r\n    boxShadow: '0 0 5px red',\r\n    ...card,\r\n  },\r\n  completed: {\r\n    backgroundColor: 'softGreen',\r\n    boxShadow: '0 0 5px green',\r\n    ...card,\r\n  },\r\n};\r\n\r\nexport default cardsTheme;\r\n","import formsTheme from './forms.theme';\r\nimport buttonsTheme from './buttons.theme';\r\nimport textTheme from './text.theme';\r\nimport cardsTheme from './cards.theme';\r\n\r\nconst theme = {\r\n  breakpoints: ['400px', '1024px', '1296px'],\r\n  colors: {\r\n    text: '#454f5b',\r\n    forms: '#454f5b',\r\n    background: '#fff',\r\n    primary: '#5c6ac4',\r\n    secondary: '#006fbb',\r\n    highlight: '#47c1bf',\r\n    muted: '#e6e6e6',\r\n    lightRed: '#e96363',\r\n    softGreen: '#8cec79',\r\n    modes: {\r\n      dark: {\r\n        forms: '#f2f2f2',\r\n        background: '#383838',\r\n        primary: '#3cf',\r\n        secondary: '#e0f',\r\n        muted: '#191919',\r\n      },\r\n    },\r\n  },\r\n  fonts: {\r\n    body: '\"Nunito Sans\", sans-serif',\r\n  },\r\n  fontSizes: [12, 14, 16, 18, 24, 32, 48, 64],\r\n  fontWeights: {\r\n    body: 400,\r\n    text: 600,\r\n    heading: 700,\r\n    bold: 700,\r\n  },\r\n  letterSpacings: {\r\n    body: 'normal',\r\n  },\r\n  lineHeights: {\r\n    body: 1.5,\r\n    heading: 1.15,\r\n  },\r\n  styles: {\r\n    root: {\r\n      fontFamily: 'body',\r\n      fontWeight: 'body',\r\n    },\r\n    a: {\r\n      textDecoration: 'none',\r\n      fontSize: [1, 2, 3, 4],\r\n      fontWeight: 'bold',\r\n      minHeight: ['100px', '70px'],\r\n      color: 'text',\r\n    },\r\n  },\r\n  forms: formsTheme,\r\n  buttons: buttonsTheme,\r\n  text: textTheme,\r\n  cards: cardsTheme,\r\n};\r\n\r\nexport default theme;\r\n","const textTheme = {\r\n  heading: {\r\n    textTransform: 'uppercase',\r\n    textAlign: 'center',\r\n    fontFamily: 'body',\r\n    lineHeight: 'heading',\r\n  },\r\n};\r\n\r\nexport default textTheme;\r\n","const url = 'https://gorest.co.in/public-api';\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nexport const client = ({ endpoint, query = '', options = {} }) => {\r\n  return fetch(`${url}/${endpoint}${query}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${API_KEY}`,\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    ...options,\r\n  })\r\n    .then((res) => {\r\n      if (res.ok) return res.json();\r\n      if (!res.ok) return Promise.reject(`Error HTTP status: ${res.status}`);\r\n    })\r\n    .catch((error) => {\r\n      return Promise.reject(`Network error: ${error}`);\r\n    });\r\n};\r\n","import { client } from './index';\r\n\r\n// GET TODO\r\nexport const getTodo = ({ id = 1 }) =>\r\n  client({\r\n    endpoint: `/todos/${id}`,\r\n  }).then((res) => {\r\n    if (res.code === 200) return res.data;\r\n    if (res.code === 404)\r\n      throw Promise.reject(\r\n        `Nie ma takiego zadanie - Możliwe, że przed chwilą ktoś je usunął ;)`\r\n      );\r\n    if (res.code !== 200 && res.code !== 404)\r\n      throw Promise.reject(`Wystąpił błąd z zaptaniem!`);\r\n  });\r\n\r\n// GET ALL TODOS\r\nexport const getTodos = ({ page = 1, q = '' }) =>\r\n  client({\r\n    endpoint: '/todos',\r\n    query: `?page=${page}${q}`,\r\n  }).then((res) => {\r\n    if (res.code === 200)\r\n      return { todoList: [...res.data], pagination: res.meta.pagination };\r\n    if (res.code !== 200)\r\n      throw Promise.reject(`Error HTTP status: ${res.code}`);\r\n  });\r\n\r\n// POST\r\nexport const addTodo = ({ data, user_id = 30 }) =>\r\n  client({\r\n    endpoint: `/users/${user_id}/todos`,\r\n    options: {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n    },\r\n  }).then((res) => {\r\n    return res;\r\n  });\r\n\r\n// PATCH\r\nexport const updateTodo = ({ todo = {}, newData }) =>\r\n  client({\r\n    endpoint: `/todos/${todo.id}`,\r\n    options: {\r\n      method: 'PATCH',\r\n      body: JSON.stringify(newData),\r\n    },\r\n  }).then((res) => {\r\n    if (res.code === 204 || res.code === 200) return res.data;\r\n    else return todo;\r\n  });\r\n\r\n// DELETE\r\nexport const deleteTodo = ({ todo = {} }) =>\r\n  client({\r\n    endpoint: `/todos/${todo.id}`,\r\n    options: {\r\n      method: 'DELETE',\r\n    },\r\n  }).then((res) => {\r\n    if (res.code === 204 || res.code === 200) return res.data;\r\n    else return todo;\r\n  });\r\n","import { client } from './index';\r\n// Get user\r\nexport const getUser = ({ id }) =>\r\n  client({\r\n    endpoint: `/users/${id}`,\r\n  }).then((res) => {\r\n    return res.data;\r\n  });\r\n\r\nexport const getUserByEmail = ({ user }) =>\r\n  client({\r\n    endpoint: `/users`,\r\n    query: `?email=${user.email}`,\r\n  }).then((res) => {\r\n    return res.data;\r\n  });\r\n\r\n// POST new user\r\nexport const addUser = ({ user }) =>\r\n  client({\r\n    endpoint: `/users`,\r\n    options: {\r\n      method: 'POST',\r\n      body: JSON.stringify({ status: 'Active', ...user }),\r\n    },\r\n  }).then((res) => {\r\n    if (res.code === 201 || res.code === 200) return res.data;\r\n    else return user;\r\n  });\r\n\r\n// UPDATE USER\r\nexport const updateUser = ({ newUserInfo, user }) =>\r\n  client({\r\n    endpoint: `/users/${user.id}`,\r\n    options: {\r\n      method: 'PATCH',\r\n      body: JSON.stringify(newUserInfo),\r\n    },\r\n  }).then((res) => {\r\n    if (res.code === 204 || res.code === 200) {\r\n      return res.data;\r\n    } else return user;\r\n  });\r\n","export const DEFAULT_USER = {\r\n  name: 'Karol Testowy',\r\n  email: 'testowy@example.com',\r\n  gender: 'Male',\r\n};\r\n","import { selectorFamily, atom, selector } from 'recoil';\r\nimport { handleCheckUser, localStorageEffect } from '../../utils';\r\nimport { getUser } from '../../api/user';\r\nimport { DEFAULT_USER } from '../../consts';\r\n\r\n// Get current user\r\nexport const newDataUserState = atom({\r\n  key: 'newDataUserState',\r\n  default: DEFAULT_USER,\r\n  effects_UNSTABLE: [localStorageEffect('current_user')],\r\n});\r\n\r\nexport const currentUserQuery = selector({\r\n  key: 'getCurrentUserQuery',\r\n  get: async ({ get }) => {\r\n    const userData = get(newDataUserState);\r\n    const user = await handleCheckUser({ user: userData });\r\n    return user;\r\n  },\r\n});\r\n\r\nexport const currentUserState = atom({\r\n  key: 'currentUserState',\r\n  default: currentUserQuery,\r\n});\r\n\r\n// Get information about user - task details\r\nexport const getUserQuery = selectorFamily({\r\n  key: 'getUserQuery',\r\n  get:\r\n    (id) =>\r\n    async ({ get }) => {\r\n      const user = await getUser({ id });\r\n      return user;\r\n    },\r\n});\r\n","import { atom, selector, selectorFamily, atomFamily } from 'recoil';\r\nimport { getTodos, getTodo } from '../../api/todos';\r\nimport { currentUserState } from '../user';\r\n\r\nexport const requestIDtodos = atom({\r\n  key: 'requestIDtodos',\r\n  default: 0,\r\n});\r\n\r\nexport const requestIDtodo = atom({\r\n  key: 'requestIDtodo',\r\n  default: 0,\r\n});\r\n\r\nexport const currentPageState = atom({\r\n  key: 'currentPageState',\r\n  default: 1,\r\n});\r\n\r\nexport const filterTodosState = atom({\r\n  key: 'filterTodosState',\r\n  default: {\r\n    completed: false,\r\n    my: false,\r\n  },\r\n});\r\n\r\n// Todos query and atom\r\nexport const todosResponseQuery = selector({\r\n  key: 'todosResponseQuery',\r\n  get: async ({ get }) => {\r\n    get(requestIDtodos);\r\n\r\n    const { completed, my } = get(filterTodosState);\r\n    const user = get(currentUserState);\r\n    const page = get(currentPageState);\r\n\r\n    // Only completed todos\r\n    if (my && completed) {\r\n      const response = await getTodos({\r\n        page,\r\n        q: `&user_id=${user.id}&completed=true`,\r\n      }).catch((err) => {\r\n        throw err;\r\n      });\r\n      return response;\r\n    }\r\n    if (completed) {\r\n      const response = await getTodos({\r\n        page,\r\n        q: '&completed=true',\r\n      }).catch((err) => {\r\n        throw err;\r\n      });\r\n      return response;\r\n    }\r\n    if (my) {\r\n      const response = await getTodos({\r\n        page,\r\n        q: `&user_id=${user.id}`,\r\n      }).catch((err) => {\r\n        throw err;\r\n      });\r\n      return response;\r\n    }\r\n\r\n    // All todos\r\n    const response = await getTodos({\r\n      page,\r\n    }).catch((err) => {\r\n      throw err;\r\n    });\r\n    return response;\r\n  },\r\n});\r\n\r\nexport const todosResponseState = atom({\r\n  key: 'todosResponseState',\r\n  default: todosResponseQuery,\r\n});\r\n\r\n// Todos stats selector\r\nexport const todosStatsQuery = selector({\r\n  key: 'todosStatsQuery',\r\n  get: ({ get }) => {\r\n    const { todoList } = get(todosResponseState);\r\n    const totalNum = todoList.length;\r\n    const totalCompleted = todoList.filter((item) => item.completed).length;\r\n    const totalUncompleted = totalNum - totalCompleted;\r\n    return {\r\n      totalCompleted,\r\n      totalUncompleted,\r\n    };\r\n  },\r\n});\r\n\r\n// New todo text atom and length text\r\nexport const newTodoTextState = atom({\r\n  key: 'newTodoTextState',\r\n  default: '',\r\n});\r\n\r\nexport const newTodoTextLengthQuery = selector({\r\n  key: 'newTodoTextLengthQuery',\r\n  get: ({ get }) => {\r\n    const text = get(newTodoTextState);\r\n    return `${text.length}/200`;\r\n  },\r\n});\r\n\r\n// Todo query and atom\r\nexport const todoResponseQuery = selectorFamily({\r\n  key: 'todoResponseQuery',\r\n  get:\r\n    (id) =>\r\n    async ({ get }) => {\r\n      get(requestIDtodo);\r\n      const response = await getTodo({ id }).catch((err) => {\r\n        throw err;\r\n      });\r\n      return response;\r\n    },\r\n});\r\n\r\nexport const todoResponseState = atomFamily({\r\n  key: 'todoResponseState',\r\n  default: todoResponseQuery,\r\n});\r\n","import { useSetRecoilState } from 'recoil';\r\n\r\nexport const useRefreshReques = (atomID) => {\r\n  const setRefresh = useSetRecoilState(atomID);\r\n\r\n  const handleRefresh = () => {\r\n    setRefresh((x) => x + 1);\r\n  };\r\n\r\n  return handleRefresh;\r\n};\r\n","import React from 'react';\r\nimport { Heading, Textarea, Flex, Button, Box } from 'theme-ui';\r\nimport PropTypes from 'prop-types';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { addTodo } from '../../api/todos';\r\n\r\n// Recoil\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport {\r\n  newTodoTextState,\r\n  newTodoTextLengthQuery,\r\n  requestIDtodos,\r\n} from '../../recoil/todo';\r\nimport { useRefreshReques } from '../../hook/useRefreshReques';\r\n\r\nfunction NewTodoPanel({ user }) {\r\n  const foreceRefreshTodos = useRefreshReques(requestIDtodos);\r\n  const [newTodoText, setNewTodoText] = useRecoilState(newTodoTextState);\r\n  const todoTextLenght = useRecoilValue(newTodoTextLengthQuery);\r\n  const { addToast } = useToasts();\r\n\r\n  const handleOnChangeText = (e) => {\r\n    setNewTodoText(e.target.value);\r\n  };\r\n\r\n  const handlePostNewTodo = (e) => {\r\n    if (!newTodoText) {\r\n      addToast('Dodaj treść zadania', {\r\n        appearance: 'info',\r\n        autoDismiss: true,\r\n      });\r\n      return;\r\n    }\r\n    if (newTodoText?.length > 200) {\r\n      addToast('Treść jest za duża', {\r\n        appearance: 'info',\r\n        autoDismiss: true,\r\n      });\r\n      return;\r\n    }\r\n    if (user?.contents)\r\n      addTodo({\r\n        data: {\r\n          title: newTodoText,\r\n          completed: false,\r\n        },\r\n        user_id: user.contents.id,\r\n      })\r\n        .then((res) => {\r\n          if (res.code !== 201 && res.code !== 200) {\r\n            addToast('Nie udało się stworzyć zadania!', {\r\n              appearance: 'error',\r\n              autoDismiss: true,\r\n            });\r\n          } else {\r\n            addToast('Stworzono zadanie!', {\r\n              appearance: 'success',\r\n              autoDismiss: true,\r\n            });\r\n            foreceRefreshTodos();\r\n          }\r\n          setNewTodoText('');\r\n        })\r\n        .catch(() => {\r\n          addToast('Nie udało się stworzyć zadania!', {\r\n            appearance: 'error',\r\n            autoDismiss: true,\r\n          });\r\n          setNewTodoText('');\r\n        });\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      as='section'\r\n      sx={{\r\n        flexBasis: ['100%', null, '40%'],\r\n        minHeight: '100vh',\r\n        pt: 100,\r\n        pb: 50,\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      <Heading as='h1' sx={{ color: 'forms' }}>\r\n        Nowe zadanie\r\n      </Heading>\r\n      <Textarea\r\n        placeholder='Wpisz swoje zadanie'\r\n        rows={20}\r\n        value={newTodoText}\r\n        onChange={handleOnChangeText}\r\n      />\r\n\r\n      <Flex\r\n        sx={{\r\n          justifyContent: 'space-between',\r\n          width: '80%',\r\n          margin: '0px auto',\r\n        }}\r\n      >\r\n        <Box sx={{ color: 'forms' }}>{todoTextLenght}</Box>\r\n        <Button\r\n          aria-label='Dodaj zadanie'\r\n          variant='secondary'\r\n          onClick={handlePostNewTodo}\r\n        >\r\n          Dodaj zadanie\r\n        </Button>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n\r\nNewTodoPanel.propTypes = {\r\n  user: PropTypes.shape({\r\n    state: PropTypes.string.isRequired,\r\n    contents: PropTypes.oneOfType([\r\n      PropTypes.instanceOf(Promise),\r\n      PropTypes.shape({\r\n        created_at: PropTypes.oneOfType([\r\n          PropTypes.string,\r\n          PropTypes.instanceOf(Date),\r\n        ]),\r\n        updated_at: PropTypes.oneOfType([\r\n          PropTypes.string,\r\n          PropTypes.instanceOf(Date),\r\n        ]),\r\n        id: PropTypes.number,\r\n        gender: PropTypes.oneOf(['Male', 'Female']),\r\n        status: PropTypes.string,\r\n        email: PropTypes.string,\r\n        name: PropTypes.string,\r\n      }),\r\n    ]).isRequired,\r\n  }),\r\n};\r\n\r\nexport default NewTodoPanel;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Flex, Switch } from 'theme-ui';\r\n\r\nfunction InfoAboutTodos({\r\n  completed,\r\n  totalCompleted,\r\n  totalUncompleted,\r\n  handleToggleCompleted,\r\n  my,\r\n  handleToggleMy,\r\n}) {\r\n  return (\r\n    <Flex sx={{ flexWrap: 'wrap' }}>\r\n      <Box\r\n        sx={{\r\n          flexBasis: ['80%', null, '40%'],\r\n          fontSize: [3, null, 1, 2],\r\n          ml: '10px',\r\n          mb: '10px',\r\n          fontWeight: 'bold',\r\n          padding: '10px 20px',\r\n          backgroundColor: 'softGreen',\r\n          borderRadius: '5px',\r\n          boxShadow: '0 0 5px green',\r\n          opacity: !completed ? 0.9 : 0,\r\n        }}\r\n      >\r\n        Zakończone: {totalCompleted}\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          flexBasis: ['80%', null, '40%'],\r\n          fontSize: [3, null, 1, 2],\r\n          ml: '10px',\r\n          mb: '10px',\r\n          fontWeight: 'bold',\r\n          padding: '10px 20px',\r\n          backgroundColor: 'lightRed',\r\n          borderRadius: '5px',\r\n          boxShadow: '0 0 5px red',\r\n          opacity: !completed ? 0.9 : 0,\r\n        }}\r\n      >\r\n        Niezakończone: {totalUncompleted}\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          fontWeight: 'bold',\r\n          padding: '0px 20px',\r\n          opacity: 0.9,\r\n          flexBasis: ['100%'],\r\n        }}\r\n      >\r\n        <Switch\r\n          defaultChecked={completed}\r\n          onChange={handleToggleCompleted}\r\n          label='Ukryj zakończone'\r\n          aria-label='Ukryj zakończone'\r\n        />\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          fontWeight: 'bold',\r\n          padding: '0px 20px',\r\n          opacity: 0.9,\r\n          flexBasis: ['100%'],\r\n          mb: ['10px', null, '0px'],\r\n        }}\r\n      >\r\n        <Switch\r\n          defaultChecked={my}\r\n          onChange={handleToggleMy}\r\n          label='Pokaż moje'\r\n          aria-label='Pokaż moje'\r\n        />\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nInfoAboutTodos.propTypes = {\r\n  completed: PropTypes.bool.isRequired,\r\n  totalCompleted: PropTypes.number.isRequired,\r\n  totalUncompleted: PropTypes.number.isRequired,\r\n  handleToggleCompleted: PropTypes.func.isRequired,\r\n  my: PropTypes.bool.isRequired,\r\n  handleToggleMy: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default InfoAboutTodos;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link as ThemeUiLink } from 'theme-ui';\r\nimport { Link as ReactRouterLink } from 'react-router-dom';\r\n\r\nconst Link = ({ children, to, sx = {} }) => {\r\n  return (\r\n    <ThemeUiLink sx={{ ...sx }} to={to} as={ReactRouterLink}>\r\n      {children}\r\n    </ThemeUiLink>\r\n  );\r\n};\r\n\r\nLink.propTypes = {\r\n  to: PropTypes.string.isRequired,\r\n  sx: PropTypes.object,\r\n};\r\n\r\nexport default Link;\r\n","import React from 'react';\r\nimport { Card, IconButton, Box } from 'theme-ui';\r\nimport PropTypes from 'prop-types';\r\nimport { FiTrash2, FiCheck } from 'react-icons/fi';\r\nimport { deleteTodo, updateTodo } from '../../api/todos';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\n// Components\r\nimport Link from '../Link';\r\n\r\n// Recoil\r\nimport { requestIDtodos } from '../../recoil/todo';\r\nimport { useRefreshReques } from '../../hook/useRefreshReques';\r\n\r\nfunction TodoListItem({ title, id, completed }) {\r\n  const forceRefreshTodos = useRefreshReques(requestIDtodos);\r\n  const { addToast } = useToasts();\r\n\r\n  const handleUpdateTask = async (e) => {\r\n    await updateTodo({ todo: { id }, newData: { completed: true } }).catch(\r\n      (err) => {\r\n        addToast(err, {\r\n          appearance: 'error',\r\n          autoDismiss: true,\r\n        });\r\n      }\r\n    );\r\n    addToast('Zadanie zaznaczono jako wykonane!', {\r\n      appearance: 'success',\r\n      autoDismiss: true,\r\n    });\r\n    forceRefreshTodos();\r\n  };\r\n\r\n  const handleDeleteTask = async (e) => {\r\n    addToast('Usunięto zadanie!', {\r\n      appearance: 'info',\r\n      autoDismiss: true,\r\n    });\r\n    await deleteTodo({ todo: { id } }).catch((err) => {\r\n      addToast(err, {\r\n        appearance: 'error',\r\n        autoDismiss: true,\r\n      });\r\n    });\r\n    forceRefreshTodos();\r\n  };\r\n\r\n  return (\r\n    <Card variant={completed ? 'completed' : 'uncompleted'}>\r\n      <Link\r\n        sx={{\r\n          flexBasis: '88%',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n        }}\r\n        to={`/todo/${id}`}\r\n      >\r\n        <Box sx={{ overflowWrap: 'break-word' }}>{title}</Box>\r\n      </Link>\r\n      <IconButton\r\n        onClick={completed ? handleDeleteTask : handleUpdateTask}\r\n        aria-label={\r\n          completed ? 'Usunięcie zadania' : 'Zaznaczenie zadania jako wykonane'\r\n        }\r\n        sx={{\r\n          border: '0',\r\n          borderLeft: '2px solid',\r\n          borderLeftColor: 'text',\r\n          borderRadius: '0',\r\n          fontSize: [1, 2, 3, 4],\r\n          flexBasis: '10%',\r\n          '&:hover': {\r\n            color: completed ? 'lightRed' : 'softGreen',\r\n            borderLeftColor: completed ? 'lightRed' : 'softGreen',\r\n          },\r\n        }}\r\n      >\r\n        {completed ? <FiTrash2 /> : <FiCheck />}\r\n      </IconButton>\r\n    </Card>\r\n  );\r\n}\r\n\r\nTodoListItem.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TodoListItem;\r\n","import React from 'react';\r\nimport { Grid } from 'theme-ui';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Components\r\nimport TodoListItem from '../TodoListItem';\r\n\r\nfunction TodosList({ todoList }) {\r\n  return (\r\n    <Grid columns={[1]} sx={{ width: '90%', margin: '20px auto' }}>\r\n      {Array.isArray(todoList) &&\r\n        todoList.length > 0 &&\r\n        todoList.map((todo) => <TodoListItem {...todo} key={todo.id} />)}\r\n      {Array.isArray(todoList) && todoList.length === 0 && (\r\n        <h1>Brak wyników</h1>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nTodosList.propTypes = {\r\n  todoList: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      completed: PropTypes.bool,\r\n      created_at: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.instanceOf(Date),\r\n      ]),\r\n      updated_at: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.instanceOf(Date),\r\n      ]),\r\n      id: PropTypes.number,\r\n      title: PropTypes.string,\r\n      user_id: PropTypes.number,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default TodosList;\r\n","import React from 'react';\r\nimport { Flex, Box, Select, IconButton } from 'theme-ui';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  BsChevronDoubleLeft,\r\n  BsChevronDoubleRight,\r\n  BsChevronLeft,\r\n  BsChevronRight,\r\n} from 'react-icons/bs';\r\n\r\nfunction PaginationTodosList({\r\n  pagination,\r\n  handleNexPage,\r\n  handleBackPage,\r\n  handleGoToFirst,\r\n  handleGoToLast,\r\n  handleSelectPage,\r\n  currentPage,\r\n}) {\r\n  const { total, pages } = pagination;\r\n\r\n  return (\r\n    <Flex\r\n      sx={{\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n        p: '20px',\r\n        minHeight: '80px',\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          fontSize: 1,\r\n          flexBasis: ['100%', 'auto'],\r\n          textAlign: 'center',\r\n          mb: ['10px', '0px'],\r\n        }}\r\n      >\r\n        Łącznie: {total}\r\n      </Box>\r\n      <Flex sx={{ flexBasis: ['100%', 'auto'] }}>\r\n        <IconButton\r\n          aria-label='Idź do pierwszej strony'\r\n          sx={{\r\n            width: ['18%', '30px', '40px'],\r\n            height: '40px',\r\n            margin: '0px 5px',\r\n          }}\r\n          disabled={currentPage === 1}\r\n          onClick={handleGoToFirst}\r\n        >\r\n          <BsChevronDoubleLeft />\r\n        </IconButton>\r\n        <IconButton\r\n          aria-label='Cofnij stornę'\r\n          sx={{\r\n            width: ['18%', '30px', '40px'],\r\n            height: '40px',\r\n            margin: '0px 5px',\r\n          }}\r\n          disabled={currentPage < 2}\r\n          onClick={handleBackPage}\r\n        >\r\n          <BsChevronLeft />\r\n        </IconButton>\r\n        <Select\r\n          aria-label='zmień stronę'\r\n          value={currentPage}\r\n          onChange={handleSelectPage}\r\n          sx={{ width: '60px' }}\r\n        >\r\n          {pages &&\r\n            [...Array(pages).keys()].map((x) => (\r\n              <option key={x} value={x + 1}>\r\n                {x + 1}\r\n              </option>\r\n            ))}\r\n        </Select>\r\n\r\n        <IconButton\r\n          aria-label='Następna strona'\r\n          sx={{\r\n            width: ['18%', '30px', '40px'],\r\n            height: '40px',\r\n            margin: '0px 5px 0px 10px',\r\n          }}\r\n          disabled={currentPage >= pages}\r\n          onClick={handleNexPage}\r\n        >\r\n          <BsChevronRight />\r\n        </IconButton>\r\n\r\n        <IconButton\r\n          aria-label='Idź do ostatniej strony'\r\n          sx={{\r\n            width: ['18%', '30px', '40px'],\r\n            height: '40px',\r\n            margin: '0px 5px',\r\n          }}\r\n          disabled={currentPage === pages}\r\n          onClick={handleGoToLast}\r\n        >\r\n          <BsChevronDoubleRight />\r\n        </IconButton>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nPaginationTodosList.propTypes = {\r\n  pagination: PropTypes.exact({\r\n    limit: PropTypes.number,\r\n    page: PropTypes.number,\r\n    pages: PropTypes.number,\r\n    total: PropTypes.number,\r\n  }).isRequired,\r\n  handleNexPage: PropTypes.func.isRequired,\r\n  handleBackPage: PropTypes.func.isRequired,\r\n  handleGoToFirst: PropTypes.func.isRequired,\r\n  handleGoToLast: PropTypes.func.isRequired,\r\n  handleSelectPage: PropTypes.func.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default PaginationTodosList;\r\n","import React, { useEffect } from 'react';\r\nimport { Box } from 'theme-ui';\r\n\r\n// Components\r\nimport InfoAboutTodos from '../../components/InfoAboutTodos';\r\nimport TodosList from '../../components/TodosList';\r\nimport PaginationTodosList from '../../components/PaginationTodosList';\r\n\r\n// Recoil\r\nimport { useRecoilValue, useRecoilState } from 'recoil';\r\nimport {\r\n  todosResponseState,\r\n  todosStatsQuery,\r\n  filterTodosState,\r\n  currentPageState,\r\n} from '../../recoil/todo';\r\n\r\nfunction TodoListPanel() {\r\n  const { todoList, pagination } = useRecoilValue(todosResponseState);\r\n  const { totalCompleted, totalUncompleted } = useRecoilValue(todosStatsQuery);\r\n  const [filters, setFilters] = useRecoilState(filterTodosState);\r\n  const [currentPage, setCurrentPage] = useRecoilState(currentPageState);\r\n\r\n  // Handlers filters\r\n  const handleToggleCompleteFilter = () => {\r\n    setFilters({ ...filters, completed: !filters.completed });\r\n  };\r\n  const handleToggleMyFilter = () => {\r\n    setFilters({ ...filters, my: !filters.my });\r\n  };\r\n\r\n  // Handlers pagination\r\n  const handleNexPage = () => {\r\n    setCurrentPage((page) => page + 1);\r\n  };\r\n  const handleBackPage = () => {\r\n    setCurrentPage((page) => page - 1);\r\n  };\r\n  const handleGoToFirst = () => {\r\n    setCurrentPage(1);\r\n  };\r\n  const handleGoToLast = () => {\r\n    setCurrentPage(pagination?.pages);\r\n  };\r\n  const handleSelectPage = (e) => {\r\n    setCurrentPage(Number(e.target.value));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentPage > pagination?.pages) {\r\n      setCurrentPage(1);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Box\r\n      as='section'\r\n      bg='muted'\r\n      sx={{\r\n        flexBasis: ['100%', null, '60%'],\r\n        minheight: '100vh',\r\n        maxHeight: [null, null, '100vh'],\r\n        pt: 50,\r\n        overflow: 'auto',\r\n      }}\r\n    >\r\n      <Box sx={{ width: '90%', margin: '0px auto' }}>\r\n        <InfoAboutTodos\r\n          totalCompleted={totalCompleted}\r\n          totalUncompleted={totalUncompleted}\r\n          handleToggleCompleted={handleToggleCompleteFilter}\r\n          completed={filters?.completed}\r\n          handleToggleMy={handleToggleMyFilter}\r\n          my={filters?.my}\r\n        />\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          width: '90%',\r\n          margin: '20px auto',\r\n          bg: 'highlight',\r\n          borderRadius: '5px',\r\n        }}\r\n      >\r\n        <PaginationTodosList\r\n          pagination={pagination}\r\n          currentPage={currentPage}\r\n          handleBackPage={handleBackPage}\r\n          handleNexPage={handleNexPage}\r\n          handleGoToFirst={handleGoToFirst}\r\n          handleGoToLast={handleGoToLast}\r\n          handleSelectPage={handleSelectPage}\r\n        />\r\n      </Box>\r\n\r\n      <TodosList todoList={todoList} />\r\n\r\n      <Box\r\n        sx={{\r\n          width: '90%',\r\n          margin: '20px auto',\r\n          bg: 'highlight',\r\n          borderRadius: '5px',\r\n        }}\r\n      >\r\n        <PaginationTodosList\r\n          pagination={pagination}\r\n          currentPage={currentPage}\r\n          handleBackPage={handleBackPage}\r\n          handleNexPage={handleNexPage}\r\n          handleGoToFirst={handleGoToFirst}\r\n          handleGoToLast={handleGoToLast}\r\n          handleSelectPage={handleSelectPage}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default TodoListPanel;\r\n","import React from 'react';\r\nimport { Box, Flex, Switch, Spinner, Select, IconButton } from 'theme-ui';\r\nimport {\r\n  BsChevronDoubleLeft,\r\n  BsChevronDoubleRight,\r\n  BsChevronLeft,\r\n  BsChevronRight,\r\n} from 'react-icons/bs';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction SkeletonTodosListPanel({ isError }) {\r\n  return (\r\n    <Box\r\n      as='section'\r\n      bg='muted'\r\n      sx={{\r\n        flexBasis: ['100%', null, '60%'],\r\n        minheight: '100vh',\r\n        maxHeight: [null, null, '100vh'],\r\n        pt: 50,\r\n        overflow: 'auto',\r\n      }}\r\n    >\r\n      {/* INFO SECTION */}\r\n      <Box sx={{ width: '90%', margin: '0px auto' }}>\r\n        <Flex sx={{ flexWrap: 'wrap' }}>\r\n          <Box\r\n            sx={{\r\n              flexBasis: ['80%', null, '40%'],\r\n              fontSize: [3, null, 1, 2],\r\n              ml: '10px',\r\n              mb: '10px',\r\n              fontWeight: 'bold',\r\n              padding: '10px 20px',\r\n              opacity: 0,\r\n            }}\r\n          >\r\n            Zakończone\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              flexBasis: ['80%', null, '40%'],\r\n              fontSize: [3, null, 1, 2],\r\n              ml: '10px',\r\n              mb: '10px',\r\n              fontWeight: 'bold',\r\n              padding: '10px 20px',\r\n              opacity: 0,\r\n            }}\r\n          >\r\n            Niezakończone:\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              fontWeight: 'bold',\r\n              padding: '0px 20px',\r\n              opacity: 0.9,\r\n              flexBasis: ['100%'],\r\n              mb: ['10px', null, '0px'],\r\n            }}\r\n          >\r\n            <Switch label='Ukryj zakończone' aria-label='Ukryj zakończone' />\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              fontWeight: 'bold',\r\n              padding: '0px 20px',\r\n              opacity: 0.9,\r\n              flexBasis: ['100%'],\r\n              mb: ['10px', null, '0px'],\r\n            }}\r\n          >\r\n            <Switch label='Pokaż moje ' aria-label='Pokaż moje' />\r\n          </Box>\r\n        </Flex>\r\n      </Box>\r\n      {/* PADDING SECTION */}\r\n      <Box\r\n        sx={{\r\n          width: '90%',\r\n          margin: '20px auto',\r\n          bg: 'highlight',\r\n          borderRadius: '5px',\r\n        }}\r\n      >\r\n        <Flex\r\n          sx={{\r\n            alignItems: 'center',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-between',\r\n            p: '20px',\r\n            minHeight: '80px',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              fontSize: 1,\r\n              flexBasis: ['100%', 'auto'],\r\n              textAlign: 'center',\r\n              mb: ['10px', '0px'],\r\n            }}\r\n          >\r\n            Łącznie: <Spinner sx={{ width: '14px', height: '14px' }} />\r\n          </Box>\r\n          <Flex sx={{ flexBasis: ['100%', 'auto'] }}>\r\n            <IconButton\r\n              aria-label='Idź do pierwszej strony'\r\n              sx={{\r\n                width: ['18%', '30px', '40px'],\r\n                height: '40px',\r\n                margin: '0px 5px',\r\n              }}\r\n              disabled={true}\r\n            >\r\n              <BsChevronDoubleLeft />\r\n            </IconButton>\r\n            <IconButton\r\n              aria-label='Cofnij stronę'\r\n              sx={{\r\n                width: ['18%', '30px', '40px'],\r\n                height: '40px',\r\n                margin: '0px 5px',\r\n              }}\r\n              disabled={true}\r\n            >\r\n              <BsChevronLeft />\r\n            </IconButton>\r\n            <Select aria-label='Wybierz stronę' sx={{ width: '60px' }}>\r\n              {10 &&\r\n                [...Array(10).keys()].map((x) => (\r\n                  <option key={x} value={x + 1}>\r\n                    {x + 1}\r\n                  </option>\r\n                ))}\r\n            </Select>\r\n\r\n            <IconButton\r\n              aria-label='Następna strona'\r\n              sx={{\r\n                width: ['18%', '30px', '40px'],\r\n                height: '40px',\r\n                margin: '0px 5px 0px 10px',\r\n              }}\r\n              disabled={true}\r\n            >\r\n              <BsChevronRight />\r\n            </IconButton>\r\n\r\n            <IconButton\r\n              aria-label='Idź do ostatniej strony'\r\n              sx={{\r\n                width: ['18%', '30px', '40px'],\r\n                height: '40px',\r\n                margin: '0px 5px',\r\n              }}\r\n              disabled={true}\r\n            >\r\n              <BsChevronDoubleRight />\r\n            </IconButton>\r\n          </Flex>\r\n        </Flex>\r\n      </Box>\r\n      {/* SPINNER SECTION */}\r\n      <Flex sx={{ justifyContent: 'center', alignItems: 'center' }}>\r\n        {isError ? (\r\n          <Box sx={{ width: '80%', height: '50vh', textAlign: 'center' }}>\r\n            <h1>Wystąpił problem z siecią</h1>\r\n          </Box>\r\n        ) : (\r\n          <Spinner sx={{ width: '80%', height: '80%' }} />\r\n        )}\r\n      </Flex>\r\n      {/* PADDING SECTION */}\r\n      <Box\r\n        sx={{\r\n          width: '90%',\r\n          margin: '20px auto',\r\n          bg: 'highlight',\r\n          borderRadius: '5px',\r\n        }}\r\n      >\r\n        <Flex\r\n          sx={{\r\n            alignItems: 'center',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-between',\r\n            p: '20px',\r\n            minHeight: '80px',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              fontSize: 1,\r\n              flexBasis: ['100%', 'auto'],\r\n              textAlign: 'center',\r\n              mb: ['10px', '0px'],\r\n            }}\r\n          >\r\n            Łącznie: <Spinner sx={{ width: '14px', height: '14px' }} />\r\n          </Box>\r\n          <Flex sx={{ flexBasis: ['100%', 'auto'] }}>\r\n            <IconButton\r\n              aria-label='Idź do pierwszej strony'\r\n              sx={{\r\n                width: ['18%', '30px', '40px'],\r\n                height: '40px',\r\n                margin: '0px 5px',\r\n              }}\r\n              disabled={true}\r\n            >\r\n              <BsChevronDoubleLeft />\r\n            </IconButton>\r\n            <IconButton\r\n              aria-label='Cofnij stronę'\r\n              sx={{\r\n                width: ['18%', '30px', '40px'],\r\n                height: '40px',\r\n                margin: '0px 5px',\r\n              }}\r\n              disabled={true}\r\n            >\r\n              <BsChevronLeft />\r\n            </IconButton>\r\n            <Select aria-label='Wybierz stronę' sx={{ width: '60px' }}>\r\n              {10 &&\r\n                [...Array(10).keys()].map((x) => (\r\n                  <option key={x} value={x + 1}>\r\n                    {x + 1}\r\n                  </option>\r\n                ))}\r\n            </Select>\r\n\r\n            <IconButton\r\n              aria-label='Następna strona'\r\n              sx={{\r\n                width: ['18%', '30px', '40px'],\r\n                height: '40px',\r\n                margin: '0px 5px 0px 10px',\r\n              }}\r\n              disabled={true}\r\n            >\r\n              <BsChevronRight />\r\n            </IconButton>\r\n\r\n            <IconButton\r\n              aria-label='Idź do ostatniej strony'\r\n              sx={{\r\n                width: ['18%', '30px', '40px'],\r\n                height: '40px',\r\n                margin: '0px 5px',\r\n              }}\r\n              disabled={true}\r\n            >\r\n              <BsChevronDoubleRight />\r\n            </IconButton>\r\n          </Flex>\r\n        </Flex>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nSkeletonTodosListPanel.propTypes = {\r\n  isError: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\r\n};\r\n\r\nexport default SkeletonTodosListPanel;\r\n","import React from 'react';\r\nimport SkeletonTodosListPanel from '../SkeletonTodosListPanel';\r\n\r\nclass ErrorBoundaryForList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <SkeletonTodosListPanel isError />;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundaryForList;\r\n","import React from 'react';\r\nimport { useRecoilValueLoadable, useSetRecoilState } from 'recoil';\r\nimport { currentUserState, newDataUserState } from '../recoil/user';\r\n\r\nconst WithUser = (WrappedComponent) => {\r\n  const HocComponent = ({ ...props }) => {\r\n    const setNewUser = useSetRecoilState(newDataUserState);\r\n    const user = useRecoilValueLoadable(currentUserState);\r\n    return <WrappedComponent user={user} setNewUser={setNewUser} {...props} />;\r\n  };\r\n\r\n  return HocComponent;\r\n};\r\n\r\nexport default WithUser;\r\n","import React from 'react';\r\nimport { Flex } from 'theme-ui';\r\n\r\n// Containers\r\nimport NewTodoPanel from '../NewTodoPanel';\r\nimport TodoListPanel from '../TodoListPanel';\r\n\r\n// Skeletons\r\nimport SkeletonTodosListPanel from '../../components/SkeletonTodosListPanel';\r\n\r\n// ErrorBoundarys\r\nimport ErrorBoundaryForList from '../../components/ErrorBoundaryForList';\r\n\r\n// Hoc\r\nimport WithUser from '../../hoc/WithUser';\r\nconst NewTaskPanelWithUser = WithUser(NewTodoPanel);\r\n\r\nfunction Home() {\r\n  return (\r\n    <Flex sx={{ flexWrap: 'wrap' }}>\r\n      <NewTaskPanelWithUser />\r\n      <ErrorBoundaryForList>\r\n        <React.Suspense fallback={<SkeletonTodosListPanel />}>\r\n          <TodoListPanel />\r\n        </React.Suspense>\r\n      </ErrorBoundaryForList>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Flex, Box, Input, Label, Radio, Button, Close } from 'theme-ui';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nfunction UserForm({ onClose, user, setNewUser }) {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const handleSaveNewUser = (data) => {\r\n    setNewUser({ ...data });\r\n    onClose();\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(handleSaveNewUser)}>\r\n      <Flex\r\n        sx={{\r\n          justifyContent:\r\n            errors.name || errors.email || errors.gender\r\n              ? 'space-between'\r\n              : 'flex-end',\r\n        }}\r\n      >\r\n        {(errors.name || errors.email || errors.gender) && (\r\n          <Box color='red'>Uzupełnij wszystkie pola!</Box>\r\n        )}\r\n        <Close aria-label='Zamknij modal' type='button' onClick={onClose} />\r\n      </Flex>\r\n      <Label>\r\n        <Box sx={{ width: '100px' }}>Nazwa:</Box>\r\n        <Input\r\n          {...register('name', { required: true })}\r\n          placeholder='Wpisz nazwę...'\r\n          defaultValue={(user.state === 'hasValue' && user.contents.name) || ''}\r\n        />\r\n      </Label>\r\n      <Label>\r\n        <Box sx={{ width: '100px' }}>Email:</Box>\r\n        <Input\r\n          {...register('email', { required: true })}\r\n          type='email'\r\n          placeholder='Wpisz email...'\r\n          defaultValue={\r\n            (user.state === 'hasValue' && user.contents.email) || ''\r\n          }\r\n        />\r\n      </Label>\r\n      <Label sx={{ justifyContent: 'flex-start' }}>\r\n        <Box sx={{ width: '125px' }}>Mężczyzna</Box>\r\n        <Radio\r\n          {...register('gender', { required: true })}\r\n          value='Male'\r\n          defaultChecked={\r\n            user.state === 'hasValue' && user.contents.gender === 'Male'\r\n          }\r\n          name='gender'\r\n        />\r\n      </Label>\r\n      <Label sx={{ justifyContent: 'flex-start' }}>\r\n        <Box sx={{ width: '125px' }}>Kobieta</Box>\r\n        <Radio\r\n          {...register('gender', { required: true })}\r\n          value='Female'\r\n          defaultChecked={\r\n            user.state === 'hasValue' && user.contents.gender === 'Female'\r\n          }\r\n          name='gender'\r\n        />\r\n      </Label>\r\n      <Button type='submit' sx={{ width: '100%' }}>\r\n        Zapisz\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nUserForm.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  setNewUser: PropTypes.func.isRequired,\r\n  user: PropTypes.shape({\r\n    state: PropTypes.string,\r\n    contents: PropTypes.oneOfType([\r\n      PropTypes.instanceOf(Promise),\r\n      PropTypes.shape({\r\n        created_at: PropTypes.oneOfType([\r\n          PropTypes.string,\r\n          PropTypes.instanceOf(Date),\r\n        ]),\r\n        updated_at: PropTypes.oneOfType([\r\n          PropTypes.string,\r\n          PropTypes.instanceOf(Date),\r\n        ]),\r\n        id: PropTypes.number,\r\n        gender: PropTypes.oneOf(['Male', 'Female']),\r\n        status: PropTypes.string,\r\n        email: PropTypes.string,\r\n        name: PropTypes.string,\r\n      }),\r\n    ]),\r\n  }).isRequired,\r\n};\r\n\r\nexport default UserForm;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Flex, Box } from 'theme-ui';\r\n\r\nconst WithModal = (WrappedComponent) => {\r\n  const modalContainer = document.getElementById('modal');\r\n  const HocComponent = ({ isOpen, onClose, ...props }) => {\r\n    return isOpen\r\n      ? ReactDOM.createPortal(\r\n          <Flex\r\n            sx={{\r\n              position: 'fixed',\r\n              top: 0,\r\n              width: '100vw',\r\n              height: '100vh',\r\n              minheight: '100vh',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              zIndex: 11,\r\n              backgroundColor: 'rgba(0,0,0, 0.3)',\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                flexBasis: ['90%', '80%', '45%', '35%'],\r\n                backgroundColor: 'white',\r\n                padding: ['10px', '30px 5px', '20px 50px 50px 50px'],\r\n              }}\r\n            >\r\n              <WrappedComponent {...props} onClose={onClose} />\r\n            </Box>\r\n          </Flex>,\r\n          modalContainer\r\n        )\r\n      : null;\r\n  };\r\n\r\n  HocComponent.propTypes = {\r\n    isOpen: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n  };\r\n\r\n  return HocComponent;\r\n};\r\n\r\nexport default WithModal;\r\n","import React, { useState } from 'react';\r\nimport { Flex, Box, Switch, useColorMode, Button } from 'theme-ui';\r\nimport { compose } from 'ramda';\r\n\r\n// Components\r\nimport UserForm from '../UserForm';\r\n\r\n// Hocs\r\nimport WithModal from '../../hoc/WithModal';\r\nimport WithUser from '../../hoc/WithUser';\r\nconst UserFormModalWithUser = compose(WithModal, WithUser)(UserForm);\r\n\r\nfunction Header() {\r\n  const [colorMode, setColorMode] = useColorMode();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleChangeColor = (e) => {\r\n    setColorMode(colorMode === 'default' ? 'dark' : 'default');\r\n  };\r\n\r\n  const handleToggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n  return (\r\n    <Box\r\n      as='header'\r\n      sx={{\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100vw',\r\n        padding: '10px 15px',\r\n        zIndex: '10',\r\n      }}\r\n    >\r\n      <Flex as='nav' sx={{ justifyContent: 'space-between' }}>\r\n        <Box>\r\n          <Button\r\n            aria-label='Konfiguracja konta'\r\n            variant='primary'\r\n            onClick={handleToggleModal}\r\n          >\r\n            Konfiguracja konta\r\n          </Button>\r\n        </Box>\r\n        <Box>\r\n          <Switch onChange={handleChangeColor} />\r\n        </Box>\r\n      </Flex>\r\n      <UserFormModalWithUser onClose={handleToggleModal} isOpen={showModal} />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {\r\n  Flex,\r\n  Textarea,\r\n  Close,\r\n  Heading,\r\n  Checkbox,\r\n  Label,\r\n  Button,\r\n} from 'theme-ui';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { updateTodo } from '../../api/todos';\r\n\r\n// Recoil\r\nimport { useRefreshReques } from '../../hook/useRefreshReques';\r\nimport { requestIDtodo, requestIDtodos } from '../../recoil/todo';\r\n\r\nfunction EditTodoForm({ onClose, todo }) {\r\n  const forceRefreshTodo = useRefreshReques(requestIDtodo);\r\n  const forceRefreshTodos = useRefreshReques(requestIDtodos);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const { title, completed } = todo;\r\n\r\n  const handleUpdateTask = async ({ data = {} }) => {\r\n    return await updateTodo({ todo, newData: data }).then((res) => res);\r\n  };\r\n  const handleSubmitEditTask = (data) => {\r\n    handleUpdateTask({ data });\r\n    forceRefreshTodo();\r\n    forceRefreshTodos();\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(handleSubmitEditTask)}>\r\n      <Flex sx={{ justifyContent: 'flex-end' }}>\r\n        <Close aria-label='Zamknij modal' type='button' onClick={onClose} />\r\n      </Flex>\r\n      <Heading as='h3'>Treść zadania</Heading>\r\n      <Textarea\r\n        {...register('title', { required: true, minLength: 1, maxLength: 200 })}\r\n        placeholder='Wpisz nową treść'\r\n        rows={10}\r\n        defaultValue={title}\r\n      />\r\n      <Flex sx={{ justifyContent: 'center' }}>\r\n        <Label sx={{ justifyContent: 'center' }}>\r\n          Ukończone\r\n          <Checkbox\r\n            {...register('completed')}\r\n            defaultChecked={completed}\r\n            sx={{ ml: '10px' }}\r\n          />\r\n        </Label>\r\n      </Flex>\r\n      <Flex\r\n        sx={{\r\n          justifyContent: 'center',\r\n          height: '16px',\r\n          color: 'red',\r\n          fontSize: '12px',\r\n        }}\r\n      >\r\n        {errors?.title?.type === 'required' && 'Zadanie musi mieć treść'}\r\n        {errors?.title?.type === 'maxLength' &&\r\n          'Zadanie może mieć max 200 znaków'}\r\n      </Flex>\r\n      <Flex sx={{ justifyContent: 'flex-end' }}>\r\n        <Button aria-label='Zapisz edytowanie zadanie' type='submit'>\r\n          Zapisz\r\n        </Button>\r\n      </Flex>\r\n    </form>\r\n  );\r\n}\r\n\r\nEditTodoForm.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  todo: PropTypes.exact({\r\n    completed: PropTypes.bool,\r\n    created_at: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.instanceOf(Date),\r\n    ]),\r\n    updated_at: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.instanceOf(Date),\r\n    ]),\r\n    id: PropTypes.number,\r\n    title: PropTypes.string,\r\n    user_id: PropTypes.number,\r\n  }).isRequired,\r\n};\r\n\r\nexport default EditTodoForm;\r\n","import React, { useState } from 'react';\r\nimport { Flex, Box, Heading, Button } from 'theme-ui';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { handleDateToString } from '../../utils';\r\nimport { deleteTodo } from '../../api/todos';\r\n\r\n// Components\r\nimport EditTodoForm from '../../components/EditTodoForm';\r\n\r\n// Hocs\r\nimport WithModal from '../../hoc/WithModal';\r\n\r\n// Recoil\r\nimport { useRecoilValue } from 'recoil';\r\nimport { todoResponseState } from '../../recoil/todo';\r\nimport { getUserQuery } from '../../recoil/user';\r\nimport { useRefreshReques } from '../../hook/useRefreshReques';\r\nimport { requestIDtodos } from '../../recoil/todo';\r\n// Modal\r\nconst EditTodoFormModal = WithModal(EditTodoForm);\r\n\r\nfunction TodoDetails() {\r\n  const forceRefreshTodos = useRefreshReques(requestIDtodos);\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const todo = useRecoilValue(todoResponseState(id));\r\n  const { title, created_at, updated_at, completed, user_id } = todo;\r\n  const user = useRecoilValue(getUserQuery(user_id));\r\n  const { name } = user;\r\n\r\n  const handleGoBack = (e) => {\r\n    history.goBack();\r\n  };\r\n  const handleToggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n  const handleDeleteTask = (e) => {\r\n    deleteTodo({ todo });\r\n    forceRefreshTodos();\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      sx={{\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        minHeight: '90vh',\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'muted',\r\n          borderRadius: '5px',\r\n          padding: ['30px 10px 20px', '50px 20px 20px'],\r\n          flexBasis: ['95%', '85%', '50%', '35%'],\r\n          color: 'forms',\r\n        }}\r\n      >\r\n        <Heading as='h1'>Szczegóły zadania</Heading>\r\n        <Heading\r\n          sx={{\r\n            m: '20px 0px',\r\n            textAlign: 'left',\r\n            fontWeight: 'text',\r\n            textTransform: 'none',\r\n          }}\r\n          as='h2'\r\n        >\r\n          <b>Tytuł:</b> {title}\r\n        </Heading>\r\n        <Heading\r\n          sx={{\r\n            m: '20px 0px',\r\n            textAlign: 'left',\r\n            fontWeight: 'text',\r\n            textTransform: 'none',\r\n          }}\r\n          as='h2'\r\n        >\r\n          <b>Zakończone:</b> {completed ? 'Tak' : 'Nie'}\r\n        </Heading>\r\n        <Heading\r\n          sx={{\r\n            m: '20px 0px',\r\n            textAlign: 'left',\r\n            fontWeight: 'text',\r\n            textTransform: 'none',\r\n          }}\r\n          as='h2'\r\n        >\r\n          <b>Twórca:</b> {name}\r\n        </Heading>\r\n        <Flex sx={{ justifyContent: 'space-between', flexWrap: 'wrap' }}>\r\n          <Box>\r\n            <b>Utworzono: </b>\r\n            {handleDateToString(created_at)}\r\n          </Box>\r\n          <Box>\r\n            <b>Aktualizacja: </b>\r\n            {handleDateToString(updated_at)}\r\n          </Box>\r\n        </Flex>\r\n        <Flex\r\n          sx={{ justifyContent: 'space-between', flexWrap: 'wrap', mt: '15px' }}\r\n        >\r\n          <Button onClick={handleGoBack} sx={{ mb: '15px' }}>\r\n            Powrót\r\n          </Button>\r\n          <Box>\r\n            <Button\r\n              variant='deleted'\r\n              sx={{ mr: '15px' }}\r\n              onClick={handleDeleteTask}\r\n            >\r\n              Usuń\r\n            </Button>\r\n            <Button variant='secondary' onClick={handleToggleModal}>\r\n              Edytuj\r\n            </Button>\r\n          </Box>\r\n        </Flex>\r\n      </Box>\r\n      <EditTodoFormModal\r\n        todo={todo}\r\n        isOpen={showModal}\r\n        onClose={handleToggleModal}\r\n      />\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default TodoDetails;\r\n","import React from 'react';\r\nimport { Flex, Box, Heading, Button, Spinner } from 'theme-ui';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction SkeletonTodoDetails({ isError }) {\r\n  const history = useHistory();\r\n\r\n  const handleGoBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      sx={{\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        minHeight: '90vh',\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'muted',\r\n          borderRadius: '5px',\r\n          padding: ['30px 10px 20px', '50px 20px 20px'],\r\n          flexBasis: ['95%', '85%', '50%', '35%'],\r\n          color: 'forms',\r\n        }}\r\n      >\r\n        <Heading as='h1'>Szczegóły zadania</Heading>\r\n        <Heading\r\n          sx={{\r\n            m: '20px 0px',\r\n            textAlign: 'left',\r\n            fontWeight: 'text',\r\n            textTransform: 'none',\r\n          }}\r\n          as='h2'\r\n        >\r\n          <b>Tytuł:</b>{' '}\r\n          {isError || <Spinner sx={{ width: '18px', height: '18px' }} />}\r\n        </Heading>\r\n        <Heading\r\n          sx={{\r\n            m: '20px 0px',\r\n            textAlign: 'left',\r\n            fontWeight: 'text',\r\n            textTransform: 'none',\r\n          }}\r\n          as='h2'\r\n        >\r\n          <b>Zakończone:</b> <Spinner sx={{ width: '18px', height: '18px' }} />\r\n        </Heading>\r\n        <Heading\r\n          sx={{\r\n            m: '20px 0px',\r\n            textAlign: 'left',\r\n            fontWeight: 'text',\r\n            textTransform: 'none',\r\n          }}\r\n          as='h2'\r\n        >\r\n          <b>Twórca:</b> <Spinner sx={{ width: '18px', height: '18px' }} />\r\n        </Heading>\r\n        <Flex sx={{ justifyContent: 'space-between', flexWrap: 'wrap' }}>\r\n          <Box>\r\n            <b>Utworzono: </b>\r\n            <Spinner sx={{ width: '12px', height: '12px' }} />\r\n          </Box>\r\n          <Box>\r\n            <b>Aktualizacja: </b>\r\n            <Spinner sx={{ width: '12px', height: '12px' }} />\r\n          </Box>\r\n        </Flex>\r\n        <Flex\r\n          sx={{ justifyContent: 'space-between', flexWrap: 'wrap', mt: '15px' }}\r\n        >\r\n          <Button onClick={handleGoBack} sx={{ mb: '15px' }}>\r\n            Powrót\r\n          </Button>\r\n          <Box>\r\n            <Button variant='deleted' sx={{ mr: '15px' }}>\r\n              Usuń\r\n            </Button>\r\n            <Button variant='secondary'>Edytuj</Button>\r\n          </Box>\r\n        </Flex>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nSkeletonTodoDetails.propTypes = {\r\n  isError: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\r\n};\r\n\r\nexport default SkeletonTodoDetails;\r\n","import React from 'react';\r\nimport SkeletonTodoDetails from '../SkeletonTodoDetails';\r\n\r\nclass ErrorBoundaryForTodoDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false, error: '' };\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <SkeletonTodoDetails isError={this.state.error} />;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundaryForTodoDetails;\r\n","import React from 'react';\r\nimport theme from './theme/theme';\r\nimport { ThemeProvider } from 'theme-ui';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { ToastProvider } from 'react-toast-notifications';\r\nimport { RecoilRoot } from 'recoil';\r\n\r\n// COMPONENTS AND CONTAINERS\r\nimport Home from './containers/Home';\r\nimport Header from './components/Header';\r\nimport TodoDetails from './containers/TodoDetails';\r\nimport SkeletonTodoDetails from './components/SkeletonTodoDetails';\r\n\r\n// ErrorBoundary\r\nimport ErrorBoundaryForTodoDetails from './components/ErrorBoundaryForTodoDetails';\r\n\r\nfunction App() {\r\n  return (\r\n    <RecoilRoot>\r\n      <Router>\r\n        <ToastProvider placement='bottom-center'>\r\n          <ThemeProvider theme={theme}>\r\n            <div className='App'>\r\n              <Header />\r\n              <Switch>\r\n                <Route path='/todo/:id'>\r\n                  <ErrorBoundaryForTodoDetails>\r\n                    <React.Suspense fallback={<SkeletonTodoDetails />}>\r\n                      <TodoDetails />\r\n                    </React.Suspense>\r\n                  </ErrorBoundaryForTodoDetails>\r\n                </Route>\r\n                <Route path='/'>\r\n                  <Home />\r\n                </Route>\r\n              </Switch>\r\n            </div>\r\n          </ThemeProvider>\r\n        </ToastProvider>\r\n      </Router>\r\n    </RecoilRoot>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}