{"version":3,"sources":["recoil/todo/index.js","api/index.js","api/todos.js","api/user.js","recoil/user/index.js","hook/useRefreshReques.js","consts.js","utils.js","hoc/WithModal.js","theme/forms.theme.js","theme/buttons.theme.js","theme/cards.theme.js","theme/theme.js","theme/text.theme.js","components/SkeletonTodoDetails/index.js","components/ErrorBoundaryForTodoDetails/index.js","containers/NewTodoPanel/index.js","components/InfoAboutTodos/index.js","components/Link/index.js","components/TodoListItem/index.js","components/TodosList/index.js","components/PaginationTodosList/index.js","containers/TodoListPanel/index.js","components/FiltersList/index.js","components/SkeletonTodosListPanel/index.js","components/ErrorBoundaryForList/index.js","hoc/WithUser.js","containers/Home/index.js","components/UserForm/index.js","components/Header/index.js","App.js","reportWebVitals.js","index.js"],"names":["requestIDtodos","atom","key","default","requestIDtodo","currentPageState","filterTodosState","completed","my","todosResponseQuery","selector","get","a","user","currentUserState","page","search","todoSearchText","query","id","getTodos","q","catch","err","response","todosResponseState","todosStatsQuery","todoList","totalNum","length","totalCompleted","filter","item","totalUncompleted","newTodoTextState","newTodoTextLengthQuery","text","todoResponseQuery","selectorFamily","getTodo","todoResponseState","atomFamily","client","endpoint","options","fetch","headers","Authorization","process","Accept","then","res","ok","json","Promise","reject","status","error","code","data","pagination","meta","addTodo","user_id","method","body","JSON","stringify","updateTodo","todo","newData","deleteTodo","getUser","getUserByEmail","email","addUser","updateUser","newUserInfo","newDataUserState","DEFAULT_USER","effects_UNSTABLE","localStorageEffect","currentUserQuery","userData","handleCheckUser","getUserQuery","useRefreshReques","atomID","setRefresh","useSetRecoilState","x","name","gender","handleDateToString","stringDate","date","Date","day","getDate","month","getMonth","hours","getHours","minutes","getMinutes","getFullYear","checkUser","setSelf","onSet","savedValue","localStorage","getItem","parse","newValue","DefaultValue","removeItem","setItem","WithModal","WrappedComponent","modalContainer","document","getElementById","isOpen","onClose","props","ReactDOM","createPortal","sx","position","top","width","height","minheight","justifyContent","alignItems","zIndex","backgroundColor","flexBasis","padding","formsTheme","switch","textarea","color","resize","margin","fontSize","maxHeight","select","label","display","input","button","cursor","opacity","transition","textTransform","card","borderRadius","theme","breakpoints","colors","forms","background","primary","secondary","highlight","muted","lightRed","softGreen","modes","dark","fonts","fontSizes","fontWeights","heading","bold","letterSpacings","lineHeights","styles","root","fontFamily","fontWeight","textDecoration","minHeight","buttons","bg","deleted","icon","borderColor","border","close","textAlign","lineHeight","cards","uncompleted","boxShadow","SkeletonTodoDetails","isError","history","useHistory","as","m","flexWrap","mt","onClick","goBack","mb","variant","mr","ErrorBoundaryForTodoDetails","state","hasError","this","children","React","Component","NewTodoPanel","foreceRefreshTodos","useRecoilState","newTodoText","setNewTodoText","todoTextLenght","useRecoilValue","addToast","useToasts","pt","pb","placeholder","rows","value","onChange","e","target","aria-label","appearance","autoDismiss","contents","title","InfoAboutTodos","ml","Link","to","ReactRouterLink","TodoListItem","forceRefreshTodos","handleUpdateTask","handleDeleteTask","overflowWrap","borderLeft","borderLeftColor","TodosList","columns","Array","isArray","map","PaginationTodosList","handleNexPage","handleBackPage","handleGoToFirst","handleGoToLast","handleSelectPage","currentPage","total","pages","p","disabled","keys","TodoListPanel","setCurrentPage","Number","useEffect","FiltersList","handleToggleCompleted","handleToggleMy","handleOnChangeSearchText","defaultChecked","SkeletonTodosListPanel","ErrorBoundaryForList","WithUser","setNewUser","useRecoilValueLoadable","NewTaskPanelWithUser","Home","filters","setFilters","setSearchText","useState","setSearch","delayHandleSearch","useCallback","debounce","overflow","Suspense","fallback","UserForm","useForm","register","handleSubmit","errors","formState","onSubmit","type","required","defaultValue","UserFormModalWithUser","compose","Header","useColorMode","colorMode","setColorMode","showModal","setShowModal","handleToggleModal","left","TodoDetails","lazy","App","placement","className","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.4b514c1a.chunk.js","sourcesContent":["import { atom, selector, selectorFamily, atomFamily } from 'recoil';\r\nimport { getTodos, getTodo } from '../../api/todos';\r\nimport { currentUserState } from '../user';\r\n\r\nexport const requestIDtodos = atom({\r\n  key: 'requestIDtodos',\r\n  default: 0,\r\n});\r\n\r\nexport const requestIDtodo = atom({\r\n  key: 'requestIDtodo',\r\n  default: 0,\r\n});\r\n\r\nexport const currentPageState = atom({\r\n  key: 'currentPageState',\r\n  default: 1,\r\n});\r\n\r\nexport const filterTodosState = atom({\r\n  key: 'filterTodosState',\r\n  default: {\r\n    completed: false,\r\n    my: false,\r\n  },\r\n});\r\n\r\n// Todos query and atom\r\nexport const todosResponseQuery = selector({\r\n  key: 'todosResponseQuery',\r\n  get: async ({ get }) => {\r\n    get(requestIDtodos);\r\n\r\n    const { completed, my } = get(filterTodosState);\r\n    const user = get(currentUserState);\r\n    const page = get(currentPageState);\r\n    const search = get(todoSearchText);\r\n    let query = '';\r\n\r\n    if (my) query += `&user_id=${user.id}`;\r\n    if (completed) query += `&completed=false`;\r\n    if (search) query += `&title=${search}`;\r\n\r\n    // All todos\r\n    const response = await getTodos({\r\n      page,\r\n      q: query,\r\n    }).catch((err) => {\r\n      throw err;\r\n    });\r\n    return response;\r\n  },\r\n});\r\n\r\nexport const todosResponseState = atom({\r\n  key: 'todosResponseState',\r\n  default: todosResponseQuery,\r\n});\r\n\r\n// Todos stats selector\r\nexport const todosStatsQuery = selector({\r\n  key: 'todosStatsQuery',\r\n  get: ({ get }) => {\r\n    const { todoList } = get(todosResponseState);\r\n    const totalNum = todoList.length;\r\n    const totalCompleted = todoList.filter((item) => item.completed).length;\r\n    const totalUncompleted = totalNum - totalCompleted;\r\n    return {\r\n      totalCompleted,\r\n      totalUncompleted,\r\n    };\r\n  },\r\n});\r\n\r\n// New todo text atom and length text\r\nexport const newTodoTextState = atom({\r\n  key: 'newTodoTextState',\r\n  default: '',\r\n});\r\n\r\nexport const newTodoTextLengthQuery = selector({\r\n  key: 'newTodoTextLengthQuery',\r\n  get: ({ get }) => {\r\n    const text = get(newTodoTextState);\r\n    return `${text.length}/200`;\r\n  },\r\n});\r\n\r\n// Todo query and atom\r\nexport const todoResponseQuery = selectorFamily({\r\n  key: 'todoResponseQuery',\r\n  get:\r\n    (id) =>\r\n    async ({ get }) => {\r\n      get(requestIDtodo);\r\n      const response = await getTodo({ id }).catch((err) => {\r\n        throw err;\r\n      });\r\n      return response;\r\n    },\r\n});\r\n\r\nexport const todoResponseState = atomFamily({\r\n  key: 'todoResponseState',\r\n  default: todoResponseQuery,\r\n});\r\n\r\n// Todo searchText\r\nexport const todoSearchText = atom({\r\n  key: 'todoSearchText',\r\n  default: '',\r\n});\r\n","const url = 'https://gorest.co.in/public-api';\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nexport const client = ({ endpoint, query = '', options = {} }) => {\r\n  return fetch(`${url}/${endpoint}${query}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${API_KEY}`,\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    ...options,\r\n  })\r\n    .then((res) => {\r\n      if (res.ok) return res.json();\r\n      if (!res.ok) return Promise.reject(`Error HTTP status: ${res.status}`);\r\n    })\r\n    .catch((error) => {\r\n      return Promise.reject(`Network error: ${error}`);\r\n    });\r\n};\r\n","import { client } from './index';\r\n\r\n// GET TODO\r\nexport const getTodo = ({ id = 1 }) =>\r\n  client({\r\n    endpoint: `/todos/${id}`,\r\n  }).then((res) => {\r\n    if (res.code === 200) return res.data;\r\n    if (res.code === 404)\r\n      throw Promise.reject(\r\n        `Nie ma takiego zadanie - Możliwe, że przed chwilą ktoś je usunął ;)`\r\n      );\r\n    if (res.code !== 200 && res.code !== 404)\r\n      throw Promise.reject(`Wystąpił błąd z zaptaniem!`);\r\n  });\r\n\r\n// GET ALL TODOS\r\nexport const getTodos = ({ page = 1, q = '' }) =>\r\n  client({\r\n    endpoint: '/todos',\r\n    query: `?page=${page}${q}`,\r\n  }).then((res) => {\r\n    if (res.code === 200)\r\n      return { todoList: [...res.data], pagination: res.meta.pagination };\r\n    if (res.code !== 200)\r\n      throw Promise.reject(`Error HTTP status: ${res.code}`);\r\n  });\r\n\r\n// POST\r\nexport const addTodo = ({ data, user_id = 30 }) =>\r\n  client({\r\n    endpoint: `/users/${user_id}/todos`,\r\n    options: {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n    },\r\n  }).then((res) => {\r\n    return res;\r\n  });\r\n\r\n// PATCH\r\nexport const updateTodo = ({ todo = {}, newData }) =>\r\n  client({\r\n    endpoint: `/todos/${todo.id}`,\r\n    options: {\r\n      method: 'PATCH',\r\n      body: JSON.stringify(newData),\r\n    },\r\n  }).then((res) => {\r\n    if (res.code === 204 || res.code === 200) return res.data;\r\n    else return todo;\r\n  });\r\n\r\n// DELETE\r\nexport const deleteTodo = ({ todo = {} }) =>\r\n  client({\r\n    endpoint: `/todos/${todo.id}`,\r\n    options: {\r\n      method: 'DELETE',\r\n    },\r\n  }).then((res) => {\r\n    if (res.code === 204 || res.code === 200) return res.data;\r\n    else return todo;\r\n  });\r\n","import { client } from './index';\r\n// Get user\r\nexport const getUser = ({ id }) =>\r\n  client({\r\n    endpoint: `/users/${id}`,\r\n  }).then((res) => {\r\n    return res.data;\r\n  });\r\n\r\nexport const getUserByEmail = ({ user }) =>\r\n  client({\r\n    endpoint: `/users`,\r\n    query: `?email=${user.email}`,\r\n  }).then((res) => {\r\n    return res.data;\r\n  });\r\n\r\n// POST new user\r\nexport const addUser = ({ user }) =>\r\n  client({\r\n    endpoint: `/users`,\r\n    options: {\r\n      method: 'POST',\r\n      body: JSON.stringify({ status: 'Active', ...user }),\r\n    },\r\n  }).then((res) => {\r\n    if (res.code === 201 || res.code === 200) return res.data;\r\n    else return user;\r\n  });\r\n\r\n// UPDATE USER\r\nexport const updateUser = ({ newUserInfo, user }) =>\r\n  client({\r\n    endpoint: `/users/${user.id}`,\r\n    options: {\r\n      method: 'PATCH',\r\n      body: JSON.stringify(newUserInfo),\r\n    },\r\n  }).then((res) => {\r\n    if (res.code === 204 || res.code === 200) {\r\n      return res.data;\r\n    } else return user;\r\n  });\r\n","import { selectorFamily, atom, selector } from 'recoil';\r\nimport { handleCheckUser, localStorageEffect } from '../../utils';\r\nimport { getUser } from '../../api/user';\r\nimport { DEFAULT_USER } from '../../consts';\r\n\r\n// Get current user\r\nexport const newDataUserState = atom({\r\n  key: 'newDataUserState',\r\n  default: DEFAULT_USER,\r\n  effects_UNSTABLE: [localStorageEffect('current_user')],\r\n});\r\n\r\nexport const currentUserQuery = selector({\r\n  key: 'getCurrentUserQuery',\r\n  get: async ({ get }) => {\r\n    const userData = get(newDataUserState);\r\n    const user = await handleCheckUser({ user: userData });\r\n    return user;\r\n  },\r\n});\r\n\r\nexport const currentUserState = atom({\r\n  key: 'currentUserState',\r\n  default: currentUserQuery,\r\n});\r\n\r\n// Get information about user - task details\r\nexport const getUserQuery = selectorFamily({\r\n  key: 'getUserQuery',\r\n  get:\r\n    (id) =>\r\n    async ({ get }) => {\r\n      const user = await getUser({ id });\r\n      return user;\r\n    },\r\n});\r\n","import { useSetRecoilState } from 'recoil';\r\n\r\nexport const useRefreshReques = (atomID) => {\r\n  const setRefresh = useSetRecoilState(atomID);\r\n\r\n  const handleRefresh = () => {\r\n    setRefresh((x) => x + 1);\r\n  };\r\n\r\n  return handleRefresh;\r\n};\r\n","export const DEFAULT_USER = {\r\n  name: 'Karol Testowy',\r\n  email: 'testowy@example.com',\r\n  gender: 'Male',\r\n};\r\n","import { DefaultValue } from 'recoil';\r\nimport { getUserByEmail, addUser, updateUser } from './api/user';\r\nimport { DEFAULT_USER } from './consts';\r\n\r\n// Parse Date to string in format \"DD/MM/YYYY HH:mm\"\r\nexport const handleDateToString = (stringDate) => {\r\n  const date = new Date(stringDate);\r\n\r\n  const day = date.getDate() > 9 ? date.getDate() : `0${date.getDate()}`;\r\n  const month =\r\n    date.getMonth() + 1 > 9 ? date.getMonth() + 1 : `0${date.getMonth() + 1}`;\r\n  const hours = date.getHours() > 9 ? date.getHours() : `0${date.getHours()}`;\r\n  const minutes =\r\n    date.getMinutes() + 1 > 9\r\n      ? date.getMinutes() + 1\r\n      : `0${date.getMinutes() + 1}`;\r\n\r\n  return `${day}/${month}/${date.getFullYear()} ${hours}:${minutes}`;\r\n};\r\n\r\n// CHECK USER\r\nexport const handleCheckUser = async ({ user = DEFAULT_USER }) => {\r\n  const checkUser = await getUserByEmail({ user });\r\n\r\n  if (checkUser?.length === 0) {\r\n    const response = await addUser({ user });\r\n    return response;\r\n  }\r\n\r\n  if (checkUser[0].name !== user.name || checkUser[0].gender !== user.gender) {\r\n    const response = await updateUser({\r\n      newUserInfo: user,\r\n      user: checkUser[0],\r\n    });\r\n    return response;\r\n  }\r\n\r\n  return checkUser[0];\r\n};\r\n\r\n// LocalStorage Persist (User)\r\nexport const localStorageEffect =\r\n  (key) =>\r\n  ({ setSelf, onSet }) => {\r\n    const savedValue = localStorage.getItem(key);\r\n    if (savedValue != null) {\r\n      setSelf(JSON.parse(savedValue));\r\n    }\r\n\r\n    onSet((newValue) => {\r\n      if (newValue instanceof DefaultValue) {\r\n        localStorage.removeItem(key);\r\n      } else {\r\n        localStorage.setItem(key, JSON.stringify(newValue));\r\n      }\r\n    });\r\n  };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Flex, Box } from 'theme-ui';\r\n\r\nconst WithModal = (WrappedComponent) => {\r\n  const modalContainer = document.getElementById('modal');\r\n  const HocComponent = ({ isOpen, onClose, ...props }) => {\r\n    return isOpen\r\n      ? ReactDOM.createPortal(\r\n          <Flex\r\n            sx={{\r\n              position: 'fixed',\r\n              top: 0,\r\n              width: '100vw',\r\n              height: '100vh',\r\n              minheight: '100vh',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              zIndex: 11,\r\n              backgroundColor: 'rgba(0,0,0, 0.3)',\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                flexBasis: ['90%', '80%', '45%', '35%'],\r\n                backgroundColor: 'white',\r\n                padding: ['10px', '30px 5px', '20px 50px 50px 50px'],\r\n              }}\r\n            >\r\n              <WrappedComponent {...props} onClose={onClose} />\r\n            </Box>\r\n          </Flex>,\r\n          modalContainer\r\n        )\r\n      : null;\r\n  };\r\n\r\n  HocComponent.propTypes = {\r\n    isOpen: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n  };\r\n\r\n  return HocComponent;\r\n};\r\n\r\nexport default WithModal;\r\n","const formsTheme = {\r\n  switch: {\r\n    backgroundColor: 'highlight',\r\n    'input:checked ~ &': {\r\n      backgroundColor: 'primary',\r\n    },\r\n  },\r\n  textarea: {\r\n    color: 'forms',\r\n    resize: 'none',\r\n    width: '80%',\r\n    margin: '20px auto',\r\n    backgroundColor: 'muted',\r\n    fontSize: [3, 4, null, 5],\r\n    maxHeight: '60vh',\r\n  },\r\n  select: {\r\n    color: 'forms',\r\n  },\r\n  label: {\r\n    fontSize: [3, 3, 4],\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    margin: '10px 0px',\r\n  },\r\n  input: {\r\n    fontSize: [3, 3, 4],\r\n    margin: '0px 0px 0px 15px',\r\n  },\r\n};\r\n\r\nexport default formsTheme;\r\n","const button = {\r\n  color: 'background',\r\n  cursor: 'pointer',\r\n  opacity: 0.7,\r\n  transition: 'opacity 0.2s ease-in-out',\r\n  textTransform: 'uppercase',\r\n  '&:hover': {\r\n    opacity: 1,\r\n  },\r\n};\r\n\r\nconst buttonsTheme = {\r\n  primary: {\r\n    ...button,\r\n    bg: 'highlight',\r\n    fontSize: [0, 2, 3],\r\n  },\r\n  secondary: {\r\n    ...button,\r\n    bg: 'secondary',\r\n  },\r\n  deleted: {\r\n    ...button,\r\n    bg: '#ff9999',\r\n  },\r\n  icon: {\r\n    ...button,\r\n    width: '100%',\r\n    height: '100%',\r\n    color: 'text',\r\n    borderColor: 'text',\r\n    border: '1px solid',\r\n    transition: 'all 0.2s ease-in-out',\r\n    '&:hover': {\r\n      opacity: 1,\r\n      color: 'secondary',\r\n    },\r\n    '&:disabled': {\r\n      opacity: 0.7,\r\n      cursor: 'default',\r\n    },\r\n  },\r\n  close: {\r\n    cursor: 'pointer',\r\n    margin: '5px',\r\n    border: '1px solid',\r\n  },\r\n};\r\n\r\nexport default buttonsTheme;\r\n","const card = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  opacity: 0.7,\r\n  padding: '10px 20px',\r\n  borderRadius: '5px',\r\n  transition: 'opacity 0.3s 0.1s ease-in-out',\r\n  '&:hover': {\r\n    opacity: 0.9,\r\n  },\r\n};\r\n\r\nconst cardsTheme = {\r\n  uncompleted: {\r\n    backgroundColor: 'lightRed',\r\n    boxShadow: '0 0 5px red',\r\n    ...card,\r\n  },\r\n  completed: {\r\n    backgroundColor: 'softGreen',\r\n    boxShadow: '0 0 5px green',\r\n    ...card,\r\n  },\r\n};\r\n\r\nexport default cardsTheme;\r\n","import formsTheme from './forms.theme';\r\nimport buttonsTheme from './buttons.theme';\r\nimport textTheme from './text.theme';\r\nimport cardsTheme from './cards.theme';\r\n\r\nconst theme = {\r\n  breakpoints: ['400px', '1024px', '1296px'],\r\n  colors: {\r\n    text: '#454f5b',\r\n    forms: '#454f5b',\r\n    background: '#fff',\r\n    primary: '#5c6ac4',\r\n    secondary: '#006fbb',\r\n    highlight: '#47c1bf',\r\n    muted: '#e6e6e6',\r\n    lightRed: '#e96363',\r\n    softGreen: '#8cec79',\r\n    modes: {\r\n      dark: {\r\n        forms: '#f2f2f2',\r\n        background: '#383838',\r\n        primary: '#3cf',\r\n        secondary: '#e0f',\r\n        muted: '#191919',\r\n      },\r\n    },\r\n  },\r\n  fonts: {\r\n    body: '\"Nunito Sans\", sans-serif',\r\n  },\r\n  fontSizes: [12, 14, 16, 18, 24, 32, 48, 64],\r\n  fontWeights: {\r\n    body: 400,\r\n    text: 600,\r\n    heading: 700,\r\n    bold: 700,\r\n  },\r\n  letterSpacings: {\r\n    body: 'normal',\r\n  },\r\n  lineHeights: {\r\n    body: 1.5,\r\n    heading: 1.15,\r\n  },\r\n  styles: {\r\n    root: {\r\n      fontFamily: 'body',\r\n      fontWeight: 'body',\r\n    },\r\n    a: {\r\n      textDecoration: 'none',\r\n      fontSize: [1, 2, 3, 4],\r\n      fontWeight: 'bold',\r\n      minHeight: ['100px', '70px'],\r\n      color: 'text',\r\n    },\r\n  },\r\n  forms: formsTheme,\r\n  buttons: buttonsTheme,\r\n  text: textTheme,\r\n  cards: cardsTheme,\r\n};\r\n\r\nexport default theme;\r\n","const textTheme = {\r\n  heading: {\r\n    textTransform: 'uppercase',\r\n    textAlign: 'center',\r\n    fontFamily: 'body',\r\n    lineHeight: 'heading',\r\n  },\r\n};\r\n\r\nexport default textTheme;\r\n","import React from 'react';\r\nimport { Flex, Box, Heading, Button, Spinner } from 'theme-ui';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction SkeletonTodoDetails({ isError }) {\r\n  const history = useHistory();\r\n\r\n  const handleGoBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      sx={{\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        minHeight: '90vh',\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'muted',\r\n          borderRadius: '5px',\r\n          padding: ['30px 10px 20px', '50px 20px 20px'],\r\n          flexBasis: ['95%', '85%', '50%', '35%'],\r\n          color: 'forms',\r\n        }}\r\n      >\r\n        <Heading as='h1'>Szczegóły zadania</Heading>\r\n        <Heading\r\n          sx={{\r\n            m: '20px 0px',\r\n            textAlign: 'left',\r\n            fontWeight: 'text',\r\n            textTransform: 'none',\r\n          }}\r\n          as='h2'\r\n        >\r\n          <b>Tytuł:</b>{' '}\r\n          {isError || <Spinner sx={{ width: '18px', height: '18px' }} />}\r\n        </Heading>\r\n        <Heading\r\n          sx={{\r\n            m: '20px 0px',\r\n            textAlign: 'left',\r\n            fontWeight: 'text',\r\n            textTransform: 'none',\r\n          }}\r\n          as='h2'\r\n        >\r\n          <b>Zakończone:</b> <Spinner sx={{ width: '18px', height: '18px' }} />\r\n        </Heading>\r\n        <Heading\r\n          sx={{\r\n            m: '20px 0px',\r\n            textAlign: 'left',\r\n            fontWeight: 'text',\r\n            textTransform: 'none',\r\n          }}\r\n          as='h2'\r\n        >\r\n          <b>Twórca:</b> <Spinner sx={{ width: '18px', height: '18px' }} />\r\n        </Heading>\r\n        <Flex sx={{ justifyContent: 'space-between', flexWrap: 'wrap' }}>\r\n          <Box>\r\n            <b>Utworzono: </b>\r\n            <Spinner sx={{ width: '12px', height: '12px' }} />\r\n          </Box>\r\n          <Box>\r\n            <b>Aktualizacja: </b>\r\n            <Spinner sx={{ width: '12px', height: '12px' }} />\r\n          </Box>\r\n        </Flex>\r\n        <Flex\r\n          sx={{ justifyContent: 'space-between', flexWrap: 'wrap', mt: '15px' }}\r\n        >\r\n          <Button onClick={handleGoBack} sx={{ mb: '15px' }}>\r\n            Powrót\r\n          </Button>\r\n          <Box>\r\n            <Button variant='deleted' sx={{ mr: '15px' }}>\r\n              Usuń\r\n            </Button>\r\n            <Button variant='secondary'>Edytuj</Button>\r\n          </Box>\r\n        </Flex>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nSkeletonTodoDetails.propTypes = {\r\n  isError: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\r\n};\r\n\r\nexport default SkeletonTodoDetails;\r\n","import React from 'react';\r\nimport SkeletonTodoDetails from '../SkeletonTodoDetails';\r\n\r\nclass ErrorBoundaryForTodoDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false, error: '' };\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <SkeletonTodoDetails isError={this.state.error} />;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundaryForTodoDetails;\r\n","import React from 'react';\r\nimport { Heading, Textarea, Flex, Button, Box } from 'theme-ui';\r\nimport PropTypes from 'prop-types';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { addTodo } from '../../api/todos';\r\n\r\n// Recoil\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport {\r\n  newTodoTextState,\r\n  newTodoTextLengthQuery,\r\n  requestIDtodos,\r\n} from '../../recoil/todo';\r\nimport { useRefreshReques } from '../../hook/useRefreshReques';\r\n\r\nfunction NewTodoPanel({ user }) {\r\n  const foreceRefreshTodos = useRefreshReques(requestIDtodos);\r\n  const [newTodoText, setNewTodoText] = useRecoilState(newTodoTextState);\r\n  const todoTextLenght = useRecoilValue(newTodoTextLengthQuery);\r\n  const { addToast } = useToasts();\r\n\r\n  const handleOnChangeText = (e) => {\r\n    setNewTodoText(e.target.value);\r\n  };\r\n\r\n  const handlePostNewTodo = (e) => {\r\n    if (!newTodoText) {\r\n      addToast('Dodaj treść zadania', {\r\n        appearance: 'info',\r\n        autoDismiss: true,\r\n      });\r\n      return;\r\n    }\r\n    if (newTodoText?.length > 200) {\r\n      addToast('Treść jest za duża', {\r\n        appearance: 'info',\r\n        autoDismiss: true,\r\n      });\r\n      return;\r\n    }\r\n    if (user?.contents)\r\n      addTodo({\r\n        data: {\r\n          title: newTodoText,\r\n          completed: false,\r\n        },\r\n        user_id: user.contents.id,\r\n      })\r\n        .then((res) => {\r\n          if (res.code !== 201 && res.code !== 200) {\r\n            addToast('Nie udało się stworzyć zadania!', {\r\n              appearance: 'error',\r\n              autoDismiss: true,\r\n            });\r\n          } else {\r\n            addToast('Stworzono zadanie!', {\r\n              appearance: 'success',\r\n              autoDismiss: true,\r\n            });\r\n            foreceRefreshTodos();\r\n          }\r\n          setNewTodoText('');\r\n        })\r\n        .catch(() => {\r\n          addToast('Nie udało się stworzyć zadania!', {\r\n            appearance: 'error',\r\n            autoDismiss: true,\r\n          });\r\n          setNewTodoText('');\r\n        });\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      as='section'\r\n      sx={{\r\n        flexBasis: ['100%', null, '40%'],\r\n        minHeight: '100vh',\r\n        pt: 100,\r\n        pb: 50,\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      <Heading as='h1' sx={{ color: 'forms' }}>\r\n        Nowe zadanie\r\n      </Heading>\r\n      <Textarea\r\n        placeholder='Wpisz swoje zadanie'\r\n        rows={20}\r\n        value={newTodoText}\r\n        onChange={handleOnChangeText}\r\n      />\r\n\r\n      <Flex\r\n        sx={{\r\n          justifyContent: 'space-between',\r\n          width: '80%',\r\n          margin: '0px auto',\r\n        }}\r\n      >\r\n        <Box sx={{ color: 'forms' }}>{todoTextLenght}</Box>\r\n        <Button\r\n          aria-label='Dodaj zadanie'\r\n          variant='secondary'\r\n          onClick={handlePostNewTodo}\r\n        >\r\n          Dodaj zadanie\r\n        </Button>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n\r\nNewTodoPanel.propTypes = {\r\n  user: PropTypes.shape({\r\n    state: PropTypes.string.isRequired,\r\n    contents: PropTypes.oneOfType([\r\n      PropTypes.instanceOf(Promise),\r\n      PropTypes.shape({\r\n        created_at: PropTypes.oneOfType([\r\n          PropTypes.string,\r\n          PropTypes.instanceOf(Date),\r\n        ]),\r\n        updated_at: PropTypes.oneOfType([\r\n          PropTypes.string,\r\n          PropTypes.instanceOf(Date),\r\n        ]),\r\n        id: PropTypes.number,\r\n        gender: PropTypes.oneOf(['Male', 'Female']),\r\n        status: PropTypes.string,\r\n        email: PropTypes.string,\r\n        name: PropTypes.string,\r\n      }),\r\n    ]).isRequired,\r\n  }),\r\n};\r\n\r\nexport default NewTodoPanel;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box } from 'theme-ui';\r\n\r\nfunction InfoAboutTodos({ completed, totalCompleted, totalUncompleted }) {\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          flexBasis: ['80%', null, '40%'],\r\n          fontSize: [3, null, 1, 2],\r\n          ml: '10px',\r\n          mb: '10px',\r\n          fontWeight: 'bold',\r\n          padding: '10px 20px',\r\n          backgroundColor: 'softGreen',\r\n          borderRadius: '5px',\r\n          boxShadow: '0 0 5px green',\r\n          opacity: !completed ? 0.9 : 0,\r\n        }}\r\n      >\r\n        Zakończone: {totalCompleted}\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          flexBasis: ['80%', null, '40%'],\r\n          fontSize: [3, null, 1, 2],\r\n          ml: '10px',\r\n          mb: '10px',\r\n          fontWeight: 'bold',\r\n          padding: '10px 20px',\r\n          backgroundColor: 'lightRed',\r\n          borderRadius: '5px',\r\n          boxShadow: '0 0 5px red',\r\n          opacity: !completed ? 0.9 : 0,\r\n        }}\r\n      >\r\n        Niezakończone: {totalUncompleted}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nInfoAboutTodos.propTypes = {\r\n  completed: PropTypes.bool.isRequired,\r\n  totalCompleted: PropTypes.number.isRequired,\r\n  totalUncompleted: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default InfoAboutTodos;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link as ThemeUiLink } from 'theme-ui';\r\nimport { Link as ReactRouterLink } from 'react-router-dom';\r\n\r\nconst Link = ({ children, to, sx = {} }) => {\r\n  return (\r\n    <ThemeUiLink sx={{ ...sx }} to={to} as={ReactRouterLink}>\r\n      {children}\r\n    </ThemeUiLink>\r\n  );\r\n};\r\n\r\nLink.propTypes = {\r\n  to: PropTypes.string.isRequired,\r\n  sx: PropTypes.object,\r\n};\r\n\r\nexport default Link;\r\n","import React from 'react';\r\nimport { Card, IconButton, Box } from 'theme-ui';\r\nimport PropTypes from 'prop-types';\r\nimport { FiTrash2, FiCheck } from 'react-icons/fi';\r\nimport { deleteTodo, updateTodo } from '../../api/todos';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\n// Components\r\nimport Link from '../Link';\r\n\r\n// Recoil\r\nimport { requestIDtodos } from '../../recoil/todo';\r\nimport { useRefreshReques } from '../../hook/useRefreshReques';\r\n\r\nfunction TodoListItem({ title, id, completed }) {\r\n  const forceRefreshTodos = useRefreshReques(requestIDtodos);\r\n  const { addToast } = useToasts();\r\n\r\n  const handleUpdateTask = async (e) => {\r\n    await updateTodo({ todo: { id }, newData: { completed: true } }).catch(\r\n      (err) => {\r\n        addToast(err, {\r\n          appearance: 'error',\r\n          autoDismiss: true,\r\n        });\r\n      }\r\n    );\r\n    addToast('Zadanie zaznaczono jako wykonane!', {\r\n      appearance: 'success',\r\n      autoDismiss: true,\r\n    });\r\n    forceRefreshTodos();\r\n  };\r\n\r\n  const handleDeleteTask = async (e) => {\r\n    addToast('Usunięto zadanie!', {\r\n      appearance: 'info',\r\n      autoDismiss: true,\r\n    });\r\n    await deleteTodo({ todo: { id } }).catch((err) => {\r\n      addToast(err, {\r\n        appearance: 'error',\r\n        autoDismiss: true,\r\n      });\r\n    });\r\n    forceRefreshTodos();\r\n  };\r\n\r\n  return (\r\n    <Card variant={completed ? 'completed' : 'uncompleted'}>\r\n      <Link\r\n        sx={{\r\n          flexBasis: '88%',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n        }}\r\n        to={`/todo/${id}`}\r\n      >\r\n        <Box sx={{ overflowWrap: 'break-word' }}>{title}</Box>\r\n      </Link>\r\n      <IconButton\r\n        onClick={completed ? handleDeleteTask : handleUpdateTask}\r\n        aria-label={\r\n          completed ? 'Usunięcie zadania' : 'Zaznaczenie zadania jako wykonane'\r\n        }\r\n        sx={{\r\n          border: '0',\r\n          borderLeft: '2px solid',\r\n          borderLeftColor: 'text',\r\n          borderRadius: '0',\r\n          fontSize: [1, 2, 3, 4],\r\n          flexBasis: '10%',\r\n          '&:hover': {\r\n            color: completed ? 'lightRed' : 'softGreen',\r\n            borderLeftColor: completed ? 'lightRed' : 'softGreen',\r\n          },\r\n        }}\r\n      >\r\n        {completed ? <FiTrash2 /> : <FiCheck />}\r\n      </IconButton>\r\n    </Card>\r\n  );\r\n}\r\n\r\nTodoListItem.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TodoListItem;\r\n","import React from 'react';\r\nimport { Grid } from 'theme-ui';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Components\r\nimport TodoListItem from '../TodoListItem';\r\n\r\nfunction TodosList({ todoList }) {\r\n  return (\r\n    <Grid columns={[1]} sx={{ width: '90%', margin: '20px auto' }}>\r\n      {Array.isArray(todoList) &&\r\n        todoList.length > 0 &&\r\n        todoList.map((todo) => <TodoListItem {...todo} key={todo.id} />)}\r\n      {Array.isArray(todoList) && todoList.length === 0 && (\r\n        <h1>Brak wyników</h1>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nTodosList.propTypes = {\r\n  todoList: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      completed: PropTypes.bool,\r\n      created_at: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.instanceOf(Date),\r\n      ]),\r\n      updated_at: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.instanceOf(Date),\r\n      ]),\r\n      id: PropTypes.number,\r\n      title: PropTypes.string,\r\n      user_id: PropTypes.number,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default TodosList;\r\n","import React from 'react';\r\nimport { Flex, Box, Select, IconButton } from 'theme-ui';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  BsChevronDoubleLeft,\r\n  BsChevronDoubleRight,\r\n  BsChevronLeft,\r\n  BsChevronRight,\r\n} from 'react-icons/bs';\r\n\r\nfunction PaginationTodosList({\r\n  pagination,\r\n  handleNexPage,\r\n  handleBackPage,\r\n  handleGoToFirst,\r\n  handleGoToLast,\r\n  handleSelectPage,\r\n  currentPage,\r\n}) {\r\n  const { total, pages } = pagination;\r\n\r\n  return (\r\n    <Flex\r\n      sx={{\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n        p: '20px',\r\n        minHeight: '80px',\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          fontSize: 1,\r\n          flexBasis: ['100%', 'auto'],\r\n          textAlign: 'center',\r\n          mb: ['10px', '0px'],\r\n        }}\r\n      >\r\n        Łącznie: {total}\r\n      </Box>\r\n      <Flex sx={{ flexBasis: ['100%', 'auto'] }}>\r\n        <IconButton\r\n          aria-label='Idź do pierwszej strony'\r\n          sx={{\r\n            width: ['18%', '30px', '40px'],\r\n            height: '40px',\r\n            margin: '0px 5px',\r\n          }}\r\n          disabled={currentPage === 1}\r\n          onClick={handleGoToFirst}\r\n        >\r\n          <BsChevronDoubleLeft />\r\n        </IconButton>\r\n        <IconButton\r\n          aria-label='Cofnij stornę'\r\n          sx={{\r\n            width: ['18%', '30px', '40px'],\r\n            height: '40px',\r\n            margin: '0px 5px',\r\n          }}\r\n          disabled={currentPage < 2}\r\n          onClick={handleBackPage}\r\n        >\r\n          <BsChevronLeft />\r\n        </IconButton>\r\n        <Select\r\n          aria-label='zmień stronę'\r\n          value={currentPage}\r\n          onChange={handleSelectPage}\r\n          sx={{ width: '60px' }}\r\n        >\r\n          {pages &&\r\n            [...Array(pages).keys()].map((x) => (\r\n              <option key={x} value={x + 1}>\r\n                {x + 1}\r\n              </option>\r\n            ))}\r\n        </Select>\r\n\r\n        <IconButton\r\n          aria-label='Następna strona'\r\n          sx={{\r\n            width: ['18%', '30px', '40px'],\r\n            height: '40px',\r\n            margin: '0px 5px 0px 10px',\r\n          }}\r\n          disabled={currentPage >= pages}\r\n          onClick={handleNexPage}\r\n        >\r\n          <BsChevronRight />\r\n        </IconButton>\r\n\r\n        <IconButton\r\n          aria-label='Idź do ostatniej strony'\r\n          sx={{\r\n            width: ['18%', '30px', '40px'],\r\n            height: '40px',\r\n            margin: '0px 5px',\r\n          }}\r\n          disabled={currentPage === pages}\r\n          onClick={handleGoToLast}\r\n        >\r\n          <BsChevronDoubleRight />\r\n        </IconButton>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nPaginationTodosList.propTypes = {\r\n  pagination: PropTypes.exact({\r\n    limit: PropTypes.number,\r\n    page: PropTypes.number,\r\n    pages: PropTypes.number,\r\n    total: PropTypes.number,\r\n  }).isRequired,\r\n  handleNexPage: PropTypes.func.isRequired,\r\n  handleBackPage: PropTypes.func.isRequired,\r\n  handleGoToFirst: PropTypes.func.isRequired,\r\n  handleGoToLast: PropTypes.func.isRequired,\r\n  handleSelectPage: PropTypes.func.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default PaginationTodosList;\r\n","import React, { useEffect } from 'react';\r\nimport { Box, Flex } from 'theme-ui';\r\n\r\n// Components\r\nimport InfoAboutTodos from '../../components/InfoAboutTodos';\r\nimport TodosList from '../../components/TodosList';\r\nimport PaginationTodosList from '../../components/PaginationTodosList';\r\n\r\n// Recoil\r\nimport { useRecoilValue, useRecoilState } from 'recoil';\r\nimport {\r\n  todosResponseState,\r\n  todosStatsQuery,\r\n  filterTodosState,\r\n  currentPageState,\r\n} from '../../recoil/todo';\r\n\r\nfunction TodoListPanel() {\r\n  const { todoList, pagination } = useRecoilValue(todosResponseState);\r\n  const { totalCompleted, totalUncompleted } = useRecoilValue(todosStatsQuery);\r\n  const { completed } = useRecoilValue(filterTodosState);\r\n  const [currentPage, setCurrentPage] = useRecoilState(currentPageState);\r\n\r\n  // Handlers pagination\r\n  const handleNexPage = () => {\r\n    setCurrentPage((page) => page + 1);\r\n  };\r\n  const handleBackPage = () => {\r\n    setCurrentPage((page) => page - 1);\r\n  };\r\n  const handleGoToFirst = () => {\r\n    setCurrentPage(1);\r\n  };\r\n  const handleGoToLast = () => {\r\n    setCurrentPage(pagination?.pages);\r\n  };\r\n  const handleSelectPage = (e) => {\r\n    setCurrentPage(Number(e.target.value));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentPage > pagination?.pages) {\r\n      setCurrentPage(1);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '90%', margin: '0px auto' }}>\r\n        <Flex sx={{ flexWrap: 'wrap' }}>\r\n          <InfoAboutTodos\r\n            totalCompleted={totalCompleted}\r\n            totalUncompleted={totalUncompleted}\r\n            completed={completed}\r\n          />\r\n        </Flex>\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          width: '90%',\r\n          margin: '20px auto',\r\n          bg: 'highlight',\r\n          borderRadius: '5px',\r\n        }}\r\n      >\r\n        <PaginationTodosList\r\n          pagination={pagination}\r\n          currentPage={currentPage}\r\n          handleBackPage={handleBackPage}\r\n          handleNexPage={handleNexPage}\r\n          handleGoToFirst={handleGoToFirst}\r\n          handleGoToLast={handleGoToLast}\r\n          handleSelectPage={handleSelectPage}\r\n        />\r\n      </Box>\r\n\r\n      <TodosList todoList={todoList} />\r\n\r\n      <Box\r\n        sx={{\r\n          width: '90%',\r\n          margin: '20px auto',\r\n          bg: 'highlight',\r\n          borderRadius: '5px',\r\n        }}\r\n      >\r\n        <PaginationTodosList\r\n          pagination={pagination}\r\n          currentPage={currentPage}\r\n          handleBackPage={handleBackPage}\r\n          handleNexPage={handleNexPage}\r\n          handleGoToFirst={handleGoToFirst}\r\n          handleGoToLast={handleGoToLast}\r\n          handleSelectPage={handleSelectPage}\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoListPanel;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Switch, Input, Flex } from 'theme-ui';\r\n\r\nfunction FiltersList({\r\n  completed,\r\n  handleToggleCompleted,\r\n  my,\r\n  handleToggleMy,\r\n  handleOnChangeSearchText,\r\n  search,\r\n}) {\r\n  return (\r\n    <Box sx={{ width: '92%', margin: '0px auto', color: 'forms' }}>\r\n      <Flex\r\n        sx={{\r\n          flexWrap: 'wrap',\r\n          margin: '20px auto',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            fontWeight: 'bold',\r\n            padding: '0px 20px',\r\n            opacity: 0.9,\r\n            flexBasis: ['100%', null, '48%'],\r\n          }}\r\n        >\r\n          <Switch\r\n            defaultChecked={completed}\r\n            onChange={handleToggleCompleted}\r\n            label='Ukryj zakończone'\r\n            aria-label='Ukryj zakończone'\r\n          />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            fontWeight: 'bold',\r\n            padding: '0px 20px',\r\n            opacity: 0.9,\r\n            flexBasis: ['100%', null, '48%'],\r\n            mb: ['10px', null, '0px'],\r\n          }}\r\n        >\r\n          <Switch\r\n            defaultChecked={my}\r\n            onChange={handleToggleMy}\r\n            label='Pokaż moje'\r\n            aria-label='Pokaż moje'\r\n          />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            fontWeight: 'bold',\r\n            padding: '0px 20px',\r\n            opacity: 0.9,\r\n            flexBasis: ['100%'],\r\n            mb: ['10px', null, '0px'],\r\n          }}\r\n        >\r\n          <Input\r\n            value={search}\r\n            onChange={handleOnChangeSearchText}\r\n            placeholder='Wyszukaj po treści...'\r\n            sx={{ margin: '0px' }}\r\n          />\r\n        </Box>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n\r\nFiltersList.propTypes = {\r\n  completed: PropTypes.bool.isRequired,\r\n  handleToggleCompleted: PropTypes.func.isRequired,\r\n  my: PropTypes.bool.isRequired,\r\n  handleToggleMy: PropTypes.func.isRequired,\r\n  handleOnChangeSearchText: PropTypes.func.isRequired,\r\n  search: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FiltersList;\r\n","import React from 'react';\r\nimport { Box, Flex, Spinner, Select, IconButton } from 'theme-ui';\r\nimport {\r\n  BsChevronDoubleLeft,\r\n  BsChevronDoubleRight,\r\n  BsChevronLeft,\r\n  BsChevronRight,\r\n} from 'react-icons/bs';\r\nimport PropTypes from 'prop-types';\r\n// Recoil\r\nimport { useRecoilValue } from 'recoil';\r\nimport { filterTodosState, currentPageState } from '../../recoil/todo';\r\n\r\nfunction SkeletonTodosListPanel({ isError }) {\r\n  const { completed } = useRecoilValue(filterTodosState);\r\n  const currentPage = useRecoilValue(currentPageState);\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '90%', margin: '0px auto' }}>\r\n        <Flex sx={{ flexWrap: 'wrap' }}>\r\n          <Box\r\n            sx={{\r\n              flexBasis: ['80%', null, '40%'],\r\n              fontSize: [3, null, 1, 2],\r\n              ml: '10px',\r\n              mb: '10px',\r\n              fontWeight: 'bold',\r\n              padding: '10px 20px',\r\n              backgroundColor: 'softGreen',\r\n              borderRadius: '5px',\r\n              boxShadow: '0 0 5px green',\r\n              opacity: !completed ? 0.9 : 0,\r\n            }}\r\n          >\r\n            Zakończone: <Spinner sx={{ width: '14px', height: '14px' }} />\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              flexBasis: ['80%', null, '40%'],\r\n              fontSize: [3, null, 1, 2],\r\n              ml: '10px',\r\n              mb: '10px',\r\n              fontWeight: 'bold',\r\n              padding: '10px 20px',\r\n              backgroundColor: 'lightRed',\r\n              borderRadius: '5px',\r\n              boxShadow: '0 0 5px red',\r\n              opacity: !completed ? 0.9 : 0,\r\n            }}\r\n          >\r\n            Niezakończone:\r\n            <Spinner sx={{ width: '14px', height: '14px' }} />\r\n          </Box>\r\n        </Flex>\r\n      </Box>\r\n      {/* PADDING SECTION */}\r\n      <Box\r\n        sx={{\r\n          width: '90%',\r\n          margin: '20px auto',\r\n          bg: 'highlight',\r\n          borderRadius: '5px',\r\n        }}\r\n      >\r\n        <Flex\r\n          sx={{\r\n            alignItems: 'center',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-between',\r\n            p: '20px',\r\n            minHeight: '80px',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              fontSize: 1,\r\n              flexBasis: ['100%', 'auto'],\r\n              textAlign: 'center',\r\n              mb: ['10px', '0px'],\r\n            }}\r\n          >\r\n            Łącznie: <Spinner sx={{ width: '14px', height: '14px' }} />\r\n          </Box>\r\n          <Flex sx={{ flexBasis: ['100%', 'auto'] }}>\r\n            <IconButton\r\n              aria-label='Idź do pierwszej strony'\r\n              sx={{\r\n                width: ['18%', '30px', '40px'],\r\n                height: '40px',\r\n                margin: '0px 5px',\r\n              }}\r\n              disabled={true}\r\n            >\r\n              <BsChevronDoubleLeft />\r\n            </IconButton>\r\n            <IconButton\r\n              aria-label='Cofnij stronę'\r\n              sx={{\r\n                width: ['18%', '30px', '40px'],\r\n                height: '40px',\r\n                margin: '0px 5px',\r\n              }}\r\n              disabled={true}\r\n            >\r\n              <BsChevronLeft />\r\n            </IconButton>\r\n            <Select aria-label='Wybierz stronę' sx={{ width: '60px' }}>\r\n              <option value={currentPage}>{currentPage}</option>\r\n            </Select>\r\n\r\n            <IconButton\r\n              aria-label='Następna strona'\r\n              sx={{\r\n                width: ['18%', '30px', '40px'],\r\n                height: '40px',\r\n                margin: '0px 5px 0px 10px',\r\n              }}\r\n              disabled={true}\r\n            >\r\n              <BsChevronRight />\r\n            </IconButton>\r\n\r\n            <IconButton\r\n              aria-label='Idź do ostatniej strony'\r\n              sx={{\r\n                width: ['18%', '30px', '40px'],\r\n                height: '40px',\r\n                margin: '0px 5px',\r\n              }}\r\n              disabled={true}\r\n            >\r\n              <BsChevronDoubleRight />\r\n            </IconButton>\r\n          </Flex>\r\n        </Flex>\r\n      </Box>\r\n      {/* SPINNER SECTION */}\r\n      <Flex sx={{ justifyContent: 'center', alignItems: 'center' }}>\r\n        {isError ? (\r\n          <Box sx={{ width: '80%', height: '50vh', textAlign: 'center' }}>\r\n            <h1>Wystąpił problem z siecią</h1>\r\n          </Box>\r\n        ) : (\r\n          <Spinner sx={{ width: '80%', height: '80%' }} />\r\n        )}\r\n      </Flex>\r\n      {/* PADDING SECTION */}\r\n      <Box\r\n        sx={{\r\n          width: '90%',\r\n          margin: '20px auto',\r\n          bg: 'highlight',\r\n          borderRadius: '5px',\r\n        }}\r\n      >\r\n        <Flex\r\n          sx={{\r\n            alignItems: 'center',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-between',\r\n            p: '20px',\r\n            minHeight: '80px',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              fontSize: 1,\r\n              flexBasis: ['100%', 'auto'],\r\n              textAlign: 'center',\r\n              mb: ['10px', '0px'],\r\n            }}\r\n          >\r\n            Łącznie: <Spinner sx={{ width: '14px', height: '14px' }} />\r\n          </Box>\r\n          <Flex sx={{ flexBasis: ['100%', 'auto'] }}>\r\n            <IconButton\r\n              aria-label='Idź do pierwszej strony'\r\n              sx={{\r\n                width: ['18%', '30px', '40px'],\r\n                height: '40px',\r\n                margin: '0px 5px',\r\n              }}\r\n              disabled={true}\r\n            >\r\n              <BsChevronDoubleLeft />\r\n            </IconButton>\r\n            <IconButton\r\n              aria-label='Cofnij stronę'\r\n              sx={{\r\n                width: ['18%', '30px', '40px'],\r\n                height: '40px',\r\n                margin: '0px 5px',\r\n              }}\r\n              disabled={true}\r\n            >\r\n              <BsChevronLeft />\r\n            </IconButton>\r\n            <Select aria-label='Wybierz stronę' sx={{ width: '60px' }}>\r\n              {10 &&\r\n                [...Array(10).keys()].map((x) => (\r\n                  <option key={x} value={x + 1}>\r\n                    {x + 1}\r\n                  </option>\r\n                ))}\r\n            </Select>\r\n\r\n            <IconButton\r\n              aria-label='Następna strona'\r\n              sx={{\r\n                width: ['18%', '30px', '40px'],\r\n                height: '40px',\r\n                margin: '0px 5px 0px 10px',\r\n              }}\r\n              disabled={true}\r\n            >\r\n              <BsChevronRight />\r\n            </IconButton>\r\n\r\n            <IconButton\r\n              aria-label='Idź do ostatniej strony'\r\n              sx={{\r\n                width: ['18%', '30px', '40px'],\r\n                height: '40px',\r\n                margin: '0px 5px',\r\n              }}\r\n              disabled={true}\r\n            >\r\n              <BsChevronDoubleRight />\r\n            </IconButton>\r\n          </Flex>\r\n        </Flex>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nSkeletonTodosListPanel.propTypes = {\r\n  isError: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\r\n};\r\n\r\nexport default SkeletonTodosListPanel;\r\n","import React from 'react';\r\nimport SkeletonTodosListPanel from '../SkeletonTodosListPanel';\r\n\r\nclass ErrorBoundaryForList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <SkeletonTodosListPanel isError />;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundaryForList;\r\n","import React from 'react';\r\nimport { useRecoilValueLoadable, useSetRecoilState } from 'recoil';\r\nimport { currentUserState, newDataUserState } from '../recoil/user';\r\n\r\nconst WithUser = (WrappedComponent) => {\r\n  const HocComponent = ({ ...props }) => {\r\n    const setNewUser = useSetRecoilState(newDataUserState);\r\n    const user = useRecoilValueLoadable(currentUserState);\r\n    return <WrappedComponent user={user} setNewUser={setNewUser} {...props} />;\r\n  };\r\n\r\n  return HocComponent;\r\n};\r\n\r\nexport default WithUser;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { Flex, Box } from 'theme-ui';\r\nimport debounce from 'lodash.debounce';\r\n\r\n// Containers\r\nimport NewTodoPanel from '../NewTodoPanel';\r\nimport TodoListPanel from '../TodoListPanel';\r\n\r\n// Components\r\nimport FiltersList from '../../components/FiltersList';\r\n\r\n// Skeletons\r\nimport SkeletonTodosListPanel from '../../components/SkeletonTodosListPanel';\r\n\r\n// ErrorBoundarys\r\nimport ErrorBoundaryForList from '../../components/ErrorBoundaryForList';\r\n\r\n// Recoil\r\nimport { useRecoilState, useSetRecoilState } from 'recoil';\r\nimport { filterTodosState, todoSearchText } from '../../recoil/todo';\r\n\r\n// Hoc\r\nimport WithUser from '../../hoc/WithUser';\r\nconst NewTaskPanelWithUser = WithUser(NewTodoPanel);\r\n\r\nfunction Home() {\r\n  const [filters, setFilters] = useRecoilState(filterTodosState);\r\n  const setSearchText = useSetRecoilState(todoSearchText);\r\n  const [search, setSearch] = useState('');\r\n\r\n  // Handlers filters\r\n  const handleToggleCompleteFilter = () => {\r\n    setFilters({ ...filters, completed: !filters.completed });\r\n  };\r\n  const handleToggleMyFilter = () => {\r\n    setFilters({ ...filters, my: !filters.my });\r\n  };\r\n  const delayHandleSearch = useCallback(\r\n    debounce((text) => {\r\n      setSearchText(text);\r\n    }, 1000),\r\n    []\r\n  );\r\n  const handleOnChangeSearchText = (e) => {\r\n    setSearch(e.target.value);\r\n    delayHandleSearch(e.target.value);\r\n  };\r\n  return (\r\n    <Flex sx={{ flexWrap: 'wrap' }}>\r\n      <NewTaskPanelWithUser />\r\n      <Box\r\n        as='section'\r\n        bg='muted'\r\n        sx={{\r\n          flexBasis: ['100%', null, '60%'],\r\n          minheight: '100vh',\r\n          maxHeight: [null, null, '100vh'],\r\n          pt: 50,\r\n          overflow: 'auto',\r\n        }}\r\n      >\r\n        <FiltersList\r\n          handleToggleCompleted={handleToggleCompleteFilter}\r\n          completed={filters?.completed}\r\n          handleToggleMy={handleToggleMyFilter}\r\n          my={filters?.my}\r\n          handleOnChangeSearchText={handleOnChangeSearchText}\r\n          search={search}\r\n        />\r\n        <ErrorBoundaryForList>\r\n          <React.Suspense fallback={<SkeletonTodosListPanel />}>\r\n            <TodoListPanel />\r\n          </React.Suspense>\r\n        </ErrorBoundaryForList>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Flex, Box, Input, Label, Radio, Button, Close } from 'theme-ui';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nfunction UserForm({ onClose, user, setNewUser }) {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const handleSaveNewUser = (data) => {\r\n    setNewUser({ ...data });\r\n    onClose();\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(handleSaveNewUser)}>\r\n      <Flex\r\n        sx={{\r\n          justifyContent:\r\n            errors.name || errors.email || errors.gender\r\n              ? 'space-between'\r\n              : 'flex-end',\r\n        }}\r\n      >\r\n        {(errors.name || errors.email || errors.gender) && (\r\n          <Box color='red'>Uzupełnij wszystkie pola!</Box>\r\n        )}\r\n        <Close aria-label='Zamknij modal' type='button' onClick={onClose} />\r\n      </Flex>\r\n      <Label>\r\n        <Box sx={{ width: '100px' }}>Nazwa:</Box>\r\n        <Input\r\n          {...register('name', { required: true })}\r\n          placeholder='Wpisz nazwę...'\r\n          defaultValue={(user.state === 'hasValue' && user.contents.name) || ''}\r\n        />\r\n      </Label>\r\n      <Label>\r\n        <Box sx={{ width: '100px' }}>Email:</Box>\r\n        <Input\r\n          {...register('email', { required: true })}\r\n          type='email'\r\n          placeholder='Wpisz email...'\r\n          defaultValue={\r\n            (user.state === 'hasValue' && user.contents.email) || ''\r\n          }\r\n        />\r\n      </Label>\r\n      <Label sx={{ justifyContent: 'flex-start' }}>\r\n        <Box sx={{ width: '125px' }}>Mężczyzna</Box>\r\n        <Radio\r\n          {...register('gender', { required: true })}\r\n          value='Male'\r\n          defaultChecked={\r\n            user.state === 'hasValue' && user.contents.gender === 'Male'\r\n          }\r\n          name='gender'\r\n        />\r\n      </Label>\r\n      <Label sx={{ justifyContent: 'flex-start' }}>\r\n        <Box sx={{ width: '125px' }}>Kobieta</Box>\r\n        <Radio\r\n          {...register('gender', { required: true })}\r\n          value='Female'\r\n          defaultChecked={\r\n            user.state === 'hasValue' && user.contents.gender === 'Female'\r\n          }\r\n          name='gender'\r\n        />\r\n      </Label>\r\n      <Button type='submit' sx={{ width: '100%' }}>\r\n        Zapisz\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nUserForm.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  setNewUser: PropTypes.func.isRequired,\r\n  user: PropTypes.shape({\r\n    state: PropTypes.string,\r\n    contents: PropTypes.oneOfType([\r\n      PropTypes.instanceOf(Promise),\r\n      PropTypes.shape({\r\n        created_at: PropTypes.oneOfType([\r\n          PropTypes.string,\r\n          PropTypes.instanceOf(Date),\r\n        ]),\r\n        updated_at: PropTypes.oneOfType([\r\n          PropTypes.string,\r\n          PropTypes.instanceOf(Date),\r\n        ]),\r\n        id: PropTypes.number,\r\n        gender: PropTypes.oneOf(['Male', 'Female']),\r\n        status: PropTypes.string,\r\n        email: PropTypes.string,\r\n        name: PropTypes.string,\r\n      }),\r\n    ]),\r\n  }).isRequired,\r\n};\r\n\r\nexport default UserForm;\r\n","import React, { useState } from 'react';\r\nimport { Flex, Box, Switch, useColorMode, Button } from 'theme-ui';\r\nimport { compose } from 'ramda';\r\n\r\n// Components\r\nimport UserForm from '../UserForm';\r\n\r\n// Hocs\r\nimport WithModal from '../../hoc/WithModal';\r\nimport WithUser from '../../hoc/WithUser';\r\nconst UserFormModalWithUser = compose(WithModal, WithUser)(UserForm);\r\n\r\nfunction Header() {\r\n  const [colorMode, setColorMode] = useColorMode();\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleChangeColor = (e) => {\r\n    setColorMode(colorMode === 'default' ? 'dark' : 'default');\r\n  };\r\n\r\n  const handleToggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n  return (\r\n    <Box\r\n      as='header'\r\n      sx={{\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100vw',\r\n        padding: '10px 15px',\r\n        zIndex: '10',\r\n      }}\r\n    >\r\n      <Flex as='nav' sx={{ justifyContent: 'space-between' }}>\r\n        <Box>\r\n          <Button\r\n            aria-label='Konfiguracja konta'\r\n            variant='primary'\r\n            onClick={handleToggleModal}\r\n          >\r\n            Konfiguracja konta\r\n          </Button>\r\n        </Box>\r\n        <Box>\r\n          <Switch onChange={handleChangeColor} />\r\n        </Box>\r\n      </Flex>\r\n      <UserFormModalWithUser onClose={handleToggleModal} isOpen={showModal} />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport theme from './theme/theme';\r\nimport { ThemeProvider } from 'theme-ui';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { ToastProvider } from 'react-toast-notifications';\r\nimport { RecoilRoot } from 'recoil';\r\n\r\n// ErrorBoundary\r\nimport ErrorBoundaryForTodoDetails from './components/ErrorBoundaryForTodoDetails';\r\n\r\n// COMPONENTS AND CONTAINERS\r\nimport Home from './containers/Home';\r\nimport Header from './components/Header';\r\nimport SkeletonTodoDetails from './components/SkeletonTodoDetails';\r\nconst TodoDetails = React.lazy(() => import('./containers/TodoDetails'));\r\n\r\nfunction App() {\r\n  return (\r\n    <RecoilRoot>\r\n      <Router>\r\n        <ToastProvider placement='bottom-center'>\r\n          <ThemeProvider theme={theme}>\r\n            <div className='App'>\r\n              <Header />\r\n              <Switch>\r\n                <Route path='/todo/:id'>\r\n                  <ErrorBoundaryForTodoDetails>\r\n                    <React.Suspense fallback={<SkeletonTodoDetails />}>\r\n                      <TodoDetails />\r\n                    </React.Suspense>\r\n                  </ErrorBoundaryForTodoDetails>\r\n                </Route>\r\n                <Route path='/'>\r\n                  <Home />\r\n                </Route>\r\n              </Switch>\r\n            </div>\r\n          </ThemeProvider>\r\n        </ToastProvider>\r\n      </Router>\r\n    </RecoilRoot>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}